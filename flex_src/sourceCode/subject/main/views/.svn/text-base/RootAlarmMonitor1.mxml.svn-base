<?xml version="1.0" encoding="utf-8"?>
<!--根告警集中监视"-->
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml"
		  xmlns:cellrender="sourceCode.subject.main.actionscript.*"
		  xmlns:ns1="com.fusioncharts.components.*"
		  creationComplete="init()"
		  borderThickness="1" borderThicknessBottom="2"  borderThicknessLeft="2"
		  borderThicknessRight="2" borderThicknessTop="2"
		  headerHeight="0"  backgroundAlpha="1" borderColor="#157baa"
		  >
	<mx:Style>
		.DataGrid1 {
			alternatingItemColors: #ffffff, #eef4ff;
			verticalGridLineColor: #d3e9ff;
			borderColor: #d3e9ff;
			headerBackgroundSkin: Embed(source="assets/images/mntsubject/theme_formbg.png");
			horizontalGridLines: false;
			verticalGridLineColor: #dadada;
			fontFamily: Arial;
			fontSize: 12;
			headerStyleName: "mydataGridHeaderStyle1";
		}
		.mydataGridHeaderStyle1 {
			fontFamily: Arial;
			fontWeight: normal;
			fontSize: 12;
			fontStyle: normal;
			textDecoration: none;
			textAlign: center;
		} 
		@font-face   
		{
			src: url("assets/ttf/STSONG.TTF");  
			font-family: EmbeddedArial;
			embedAsCFF: false;  
		}  
 
	</mx:Style>
	<mx:Script>
		<![CDATA[
			import common.actionscript.DealAlarmUtil;
			import common.actionscript.ModelLocator;
			
			import mx.charts.events.ChartEvent;
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.events.CloseEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.messaging.ChannelSet;
			import mx.messaging.Consumer;
			import mx.messaging.channels.AMFChannel;
			import mx.messaging.channels.StreamingAMFChannel;
			import mx.messaging.events.MessageEvent;
			import mx.messaging.events.MessageFaultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import sourceCode.alarmmgr.views.AlarmManager;
			import sourceCode.rootalarm.views.RootAlarmMgr;
			import sourceCode.subject.main.actionscript.*;
			
			
			private var rootAlarmWin:TitleWindow;
			private var alarmWin:TitleWindow;
			//private var manageralarm:manageralarmwin=new manageralarmwin();
			[Bindable]
			public var ts:ArrayCollection = new ArrayCollection(); 
			public var tableFlag:int=0;
			private var medalsAC:ArrayCollection=new ArrayCollection();
			[Embed(source="assets/images/rootalarm/alarm_message.png")]
			public var Icon:Class; 
			public var param:ArrayCollection= new ArrayCollection();
			private var xmlData1:String;
			private var getRootMonitorData:RemoteObject;
			
			[Embed(source="assets/images/mntsubject/bubble-chat.png")] 
			private var iconClass:Class;
			
			
			public function init(){
				pagingFunction();
			}
			private function subscriberTranSysAlarmRoot(subtopic:String):void{				
				var consumer:Consumer =new Consumer();				
				var channelSet:ChannelSet = new ChannelSet();   
				channelSet.addChannel(DealAlarmUtil.streamingAMF);   
				channelSet.addChannel(DealAlarmUtil.pollingAMF);
				consumer.destination = DealAlarmUtil.sdestination; 
				consumer.channelSet = channelSet;
				consumer.subtopic = subtopic;
				consumer.addEventListener(MessageEvent.MESSAGE,handleTranSysAlarmRoot);
				consumer.addEventListener(MessageFaultEvent.FAULT,faultHandlerMsg);
				consumer.subscribe();
				
			}
			private function handleTranSysAlarmRoot(msg:MessageEvent):void{
				if(msg.message.body==null && msg.message.body==""){
					Alert.show('接到的消息为空',"提示信息",4,this,null,iconClass); return;
				}
				dg.dataProvider=null;
				var tranSysAlarmRootAC:ArrayCollection = msg.message.body as ArrayCollection;
				dg.dataProvider = tranSysAlarmRootAC.source.sort("STEP");
				drawGraphic(tranSysAlarmRootAC.source.sort("STEP"));
			}
			private function faultHandlerMsg(event:MessageFaultEvent):void{
			}
			
			public function linkRelationUI(obj:Object,alarmGrade:String):void{
				rootAlarmWin =new TitleWindow();
				rootAlarmWin.layout="absolute";
				rootAlarmWin.x=0;
				rootAlarmWin.y=0;
				rootAlarmWin.width=Capabilities.screenResolutionX;
				rootAlarmWin.height=Capabilities.screenResolutionY-200;
				rootAlarmWin.horizontalScrollPolicy="off";
				rootAlarmWin.verticalScrollPolicy="off";
				rootAlarmWin.styleName="popwindow";
				rootAlarmWin.showCloseButton="true";
				rootAlarmWin.title="当前根告警";
				rootAlarmWin.titleIcon=Icon;
				var ram:RootAlarmMgr = new RootAlarmMgr();
				ram.flag = 1;
				ram.sysaname = obj.BELONGTRANSYS;
				if(tableFlag==0){
					if(alarmGrade=="rootalarm"){
						ram.currentGrid = "currentrootalarm";
					}else if(alarmGrade=="ackedcount"){
						ram.currentGrid = "ackedrootalarm";
					}else if(alarmGrade=="ackingcount"){
						ram.currentGrid = "unackedrootalarm";
					}
				}else{
					if(obj.ALARMSTATUS=="根告警总数"){
						ram.currentGrid = "currentrootalarm";
					}else if(obj.ALARMSTATUS=="已确认根告警"){
						ram.currentGrid = "ackedrootalarm";
					}else if(obj.ALARMSTATUS=="未确认根告警"){
						ram.currentGrid = "unackedrootalarm";
					}
				}
				rootAlarmWin.addEventListener(CloseEvent.CLOSE,titlewinclose);
				rootAlarmWin.addChild(ram);
				PopUpManager.addPopUp(rootAlarmWin,main(Application.application),true);
				PopUpManager.centerPopUp(rootAlarmWin);
			}
			private function titlewinclose(evt:CloseEvent):void{
				PopUpManager.removePopUp(rootAlarmWin);
			}
			
			
			private function load(event:ResultEvent):void{
				param=event.result as ArrayCollection;
				dg.dataProvider=param;
				
			}
			
			private function pagingFunction():void {
				
				var rtobj:RemoteObject = new RemoteObject("RootAlarmMonitorDwr");
				rtobj.endpoint = ModelLocator.END_POINT;
				rtobj.showBusyCursor = true;
				rtobj.getRootAlarmMonitor();
				rtobj.addEventListener(ResultEvent.RESULT, load);
			}
			private function getRootMonitorDataCallback(event:ResultEvent):void{
				
				getRootMonitorData.removeEventListener(ResultEvent.RESULT,getRootMonitorDataCallback);
				getRootMonitorData.removeEventListener(FaultEvent.FAULT,faultHandler);
				drawGraphic(event.result as ArrayCollection);
			}
			private function drawGraphic(pieArrayCollection:ArrayCollection):void{
				if(tableFlag==1){
					aaa.percentHeight=100;
					aaa.percentWidth=100;
				}
				medalsAC.removeAll();
				medalsAC = pieArrayCollection;
				column.setStyle("columnWidthRatio",0.5);
				column.dataProvider=medalsAC;
			}
			private function faultHandler(evt:FaultEvent):void{
				Alert.show(evt.fault.toString(),"提示信息",4,this,null,iconClass);
			}
			protected function liebiao_clickHandler(event:MouseEvent):void
			{
				tableFlag=0;
				aaa.visible=false;
				aaa.includeInLayout=false;
				dg.visible=true;
				dg.includeInLayout=true;
				pagingFunction();
			}
			public function createPie():void{
				tableFlag=1;
				aaa.percentHeight=100;
				aaa.percentWidth=100;
				dg.visible=false;
				dg.includeInLayout=false;
				aaa.visible=true;
				aaa.includeInLayout=true;
				aaa.percentHeight=100;
				aaa.percentWidth=100;
				getRootMonitorData=new RemoteObject("subject");
				getRootMonitorData.endpoint = ModelLocator.END_POINT;
				getRootMonitorData.addEventListener(ResultEvent.RESULT,getRootMonitorDataCallback);
				getRootMonitorData.addEventListener(FaultEvent.FAULT,faultHandler);
				getRootMonitorData.getRootMonitorData();
			}



			protected function column_doubleClickHandler(evt:ChartItemEvent):void
			{   
				var data:Object=new Object();
				data.BELONGTRANSYS=evt.hitData.item.BELONGTRANSYS;
				data.ALARMSTATUS=ColumnSeries(evt.hitData.element).displayName;
				linkRelationUI(data,'rootalarm');
			}

		]]>
	</mx:Script>
	
	<mx:Stroke id="chartAxisStroke" color="0x666666" weight="3"/>
	<mx:Stroke id="chartAxisStrokeThick" caps="round" color="0x666666" weight="3" />    
	<mx:Stroke id="yline" caps="round" color="0xFFFFFF" weight="0" />    
	<mx:SolidColor id="sc1" color="#009dff" />		
	<mx:SolidColor id="sc2" color="#00FF00"/>       <!--绿色  代表正常 -->
	<mx:SolidColor id="sc3" color="#ffd400" />		<!--黄色  紧急 -->
	<mx:Grid width="100%" height="100%" verticalGap="0" horizontalGap="0"  backgroundColor="#FFFFFF">
		<mx:GridRow width="100%" height="10%" >
			<!-- 以下banner 条部分-->
			<mx:GridItem horizontalAlign="left" verticalAlign="middle" width="100%" height="100%" >						
				<mx:Grid id="transline" width="100%" height="100%" verticalGap="0" horizontalGap="0" backgroundColor="#FFFFFF">
					<mx:GridRow width="100%" height="100%" backgroundImage="@Embed(source='assets/images/mntsubject/themeheader.png')" backgroundSize="100%" >
						<mx:GridItem horizontalAlign="left" verticalAlign="middle" width="30%" height="100%" backgroundImage="@Embed(source='assets/images/mntsubject/content_headerbg.png')" backgroundSize="100%" color="#FFFFFF">				          
							<mx:Label text="根告警集中监视"  />
						</mx:GridItem>
						<mx:GridItem horizontalAlign="right" paddingLeft="0"  width="15%" height="100%" backgroundImage="@Embed(source='assets/images/mntsubject/content_headerrightbg.png')" backgroundSize="100%">
						</mx:GridItem>
						<mx:GridItem horizontalAlign="right" verticalAlign="middle" width="55%" height="100%" >
							<mx:HBox>
								<mx:LinkButton icon="@Embed(source='assets/images/mntsubject/Form.png')" click="liebiao_clickHandler(event)"/>
								<mx:LinkButton icon="@Embed(source='assets/images/mntsubject/Columnar.png')" click="createPie()"/>
							</mx:HBox>
						</mx:GridItem>
					</mx:GridRow>
				</mx:Grid>
			</mx:GridItem>
			<!-- 以上banner 条部分-->
		</mx:GridRow>	
		<mx:GridRow width="100%" height="90%" id="gridTest">
			<mx:GridItem width="100%" height="100%" >
				<!-- 以下监控拓扑区-->
				<mx:DataGrid id="dg"  sortableColumns="false"   horizontalScrollPolicy="off"  wordWrap="true" styleName="DataGrid1" 
							 width="100%"  height="100%" rowHeight="30" textAlign="center" verticalAlign="middle">
					<mx:columns>
						<mx:DataGridColumn headerText="系统名称" textAlign="left" dataField="BELONGTRANSYS" />
						<mx:DataGridColumn headerText="根告警总数"  dataField="ROOTALARM">
							<mx:itemRenderer>
								<mx:Component> 
									<cellrender:RollOverItemRenderer alarmGrade="rootalarm" click="outerDocument.linkRelationUI(data,'rootalarm')"/>
								</mx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						
						<mx:DataGridColumn headerText="已确认根告警" dataField="ACKEDCOUNT" >
							<mx:itemRenderer>
								<mx:Component>
									<cellrender:RollOverItemRenderer alarmGrade="ackedcount" click="outerDocument.linkRelationUI(data,'ackedcount')"/>
								</mx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						
						<mx:DataGridColumn headerText="未确认根告警" dataField="ACKINGCOUNT" >
							<mx:itemRenderer>
								<mx:Component>
									<cellrender:RollOverItemRenderer alarmGrade="ackingcount" click="outerDocument.linkRelationUI(data,'ackingcount')"/>
								</mx:Component>
							</mx:itemRenderer>
						</mx:DataGridColumn>
						
					</mx:columns>
				</mx:DataGrid>
				<mx:VBox id="aaa" visible="false" includeInLayout="false">
					<!--<mx:Legend dataProvider="{column}" horizontalAlign="center" />-->
					<mx:Legend width="100%" horizontalGap="0" direction="horizontal">
						<mx:LegendItem label="未确认根告警" fontWeight="normal" fontSize="12">
							<mx:fill>
								<mx:SolidColor color="#009dff"/>
							</mx:fill>
							<mx:stroke>
								<mx:Stroke color="0x000000" weight="1" />
							</mx:stroke>
						</mx:LegendItem>
						<mx:LegendItem label="已确认根告警" fontWeight="normal" fontSize="12">
							<mx:fill>
								<mx:SolidColor color="#00FF00"/>
							</mx:fill>
							<mx:stroke>
								<mx:Stroke color="0x000000" weight="1"/>
							</mx:stroke>
						</mx:LegendItem>
						<mx:LegendItem label="根告警总数" fontWeight="normal" fontSize="12">
							<mx:fill>
								<mx:SolidColor color="#ffd400"/>
							</mx:fill>
							<mx:stroke>
								<mx:Stroke color="0x000000" weight="1"/>
							</mx:stroke>
						</mx:LegendItem>
					</mx:Legend>

					<mx:ColumnChart id="column" height="100%" color="0x323232" width="100%" 
									showDataTips="true" dataProvider="{medalsAC}"  itemDoubleClick="column_doubleClickHandler(event)" doubleClickEnabled="true">
						
						
						<mx:horizontalAxis >
							<mx:CategoryAxis id="chartXAxis" categoryField="BELONGTRANSYS"/>
						</mx:horizontalAxis>
						<mx:horizontalAxisRenderers>
							<!-- 定制横坐标 -->
							<mx:AxisRenderer axis="{chartXAxis}" axisStroke="{chartAxisStroke}" color="#000000" tickStroke="{chartAxisStroke}" labelRotation="45"   canDropLabels="false" fontFamily="EmbeddedArial" />
						</mx:horizontalAxisRenderers>
						<!-- 定制纵坐标 -->
						<mx:verticalAxis>
							<mx:LinearAxis id="chartYAxis"/>
						</mx:verticalAxis>
						<mx:verticalAxisRenderers>
							<mx:AxisRenderer axis="{chartYAxis}" fontSize="12" axisStroke="{chartAxisStrokeThick}" color="#000000" canDropLabels="true" tickStroke="{yline}" />
						</mx:verticalAxisRenderers>
						<mx:series>
							<mx:ColumnSeries  xField="BELONGTRANSYS" yField="ACKINGCOUNT" displayName="未确认根告警" fill="{sc1}" fontSize="12" fontFamily="Arial" fontWeight="normal"/>
							<mx:ColumnSeries xField="BELONGTRANSYS" yField="ACKEDCOUNT" displayName="已确认根告警" fill="{sc2}" fontSize="12" fontFamily="Arial" fontWeight="normal"/>
							<mx:ColumnSeries xField="BELONGTRANSYS" yField="ROOTALARM" displayName="根告警总数" fill="{sc3}" fontSize="12" fontFamily="Arial" fontWeight="normal"/>
						</mx:series>
					</mx:ColumnChart>
				</mx:VBox>
			</mx:GridItem>	
		</mx:GridRow>
	</mx:Grid>				
</mx:Panel>
