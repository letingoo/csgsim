<?xml version="1.0" encoding="utf-8"?>
<!--告警处理流向信息-->
<mx:VBox
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:cellrender="sourceCode.subject.main.actionscript.*"
	creationComplete="init();"
	width="100%" height="100%" 
	styleName="popwindow" 
	xmlns:comp="common.actionscript.*"
	xmlns:component="common.component.*" 
	xmlns:views="sourceCode.common.views.*" xmlns:base="base.*">
	
	<mx:Script>
		<![CDATA[
			import common.actionscript.DealAlarmUtil;
			import common.actionscript.ModelLocator;
			import common.actionscript.Registry;
			import common.other.SuperPanelControl.WindowContainer;
			
			import mx.collections.ArrayCollection;
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.controls.Text;
			import mx.core.Application;
			import mx.core.UIComponent;
			import mx.events.CloseEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ItemClickEvent;
			import mx.managers.PopUpManager;
			import mx.messaging.ChannelSet;
			import mx.messaging.Consumer;
			import mx.messaging.events.MessageEvent;
			import mx.messaging.events.MessageFaultEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.HTTPService;
			import mx.rpc.remoting.mxml.RemoteObject;
			
			import sourceCode.alarmmgr.actionscript.SequenceItemRenderer;
			import sourceCode.alarmmgr.views.PopUpKeyBusiness;
			import sourceCode.flashalarm.ShowFlashAlarmDetail;
			import sourceCode.rootalarm.actionscript.RootAlarmFlowMgrCombox;
			import sourceCode.rootalarm.model.RootAlarmFlowMgrInfo;
			
			[Bindable]
			public var param:ArrayCollection = new ArrayCollection();
			
			[Bindable]
			private var cbconfigSys:RootAlarmFlowMgrCombox = null;
			[Bindable]
			private var transAlarmHelpDisplay:TitleWindow;
			private var indexRenderer:Class = SequenceItemRenderer;
			
			[Bindable]			
			public var isacked:String = "0";  //    是否确认根告警
			
			public var obj:Object = new Object();
			
			[Bindable]			
			public var iscleared:String = "0"; 
			var objTrans:Object=new Object();
			[Bindable]
			private var filterContent:Array = new Array();
			private var currentGridSelectitem:Object=null;
			[Bindable]
			public var  currentGrid:String="unackedrootalarm";
			
			private var getrootalarm_itemMeau:ContextMenuItem;   //根告警确认
			private var getrootalarmdetail_itemMeau:ContextMenuItem;  //查询告警详细信息
			private var changeordinaryalarm_itemmeau:ContextMenuItem;  //转为普通告警
			private var changefollowalarm_itemmeau:ContextMenuItem;  //转为伴随告警
			private var getalarmlogselect_itemMeau:ContextMenuItem;  //查看告警日志操作
			private var getalarmhelpdisplay_itemMeau:ContextMenuItem;  //查看告警处理经验
			private var geteffectscurrentalarm_itemMeau:ContextMenuItem;  //查看频闪告警
			private var getconcomitantalarm_itemMeau:ContextMenuItem;  //查看伴随告警
			private var geteffectbusiness_itemMeau:ContextMenuItem;  //影响业务
			private var fixAlarmMeau:ContextMenuItem;  //定位告警
			
			[Bindable]
			private var alarmid:String="";
			[Bindable]
			private var contextMeau:ContextMenu;
			[Bindable]
			public var sysaname:String = "";
			[Bindable]
			public var circuitype:String = "";
			[Bindable]
			public var alarmdealmethod:String = "";
			[Bindable]
			public var alarmmethod:String = "";
			[Bindable]
			public var alarm_level:String = "";
			[Bindable]
			public var start:int =  0 ;
			[Bindable]
			public var end:int =  50 ; 
			public var alarmlevelname:String="";
			public var belongtransys:String="";
			public var alarmobjdesc:String = "";
			public var vendorzh:String = "";
			public var isackedzh:String="";
			public var objclasszh:String="";
			public var acktime:String="";
			public var laststarttime:String="";
			public var alarmdesc="";
			public var _ackperson="";
			public var alarmnumber="";
			private var flag:Boolean=false;
			[Bindable]
			public var operPerson:String="";
			[Bindable]
			public var actime:String ="";
			public var alarmnum:String="";
			public var mainFlag:Boolean=false;
			[Embed(source="assets/images/rootalarm/search1.png")]
			public static const btnIcon:Class;
			[Embed(source="assets/images/mntsubject/bubble-chat.png")] 
			private var iconClass:Class; 
			
			//			private var consumers:Object;
			public var Icon:Class; 
			private var rootAlarmWin:TitleWindow;
			private var ac:ArrayCollection = new ArrayCollection([
				{label:'根告警处理流向查询'}]);
			
			
			public function init():void{
				//getUserName();
				dg.dataProvider=null;
				//mainFlag=true;
				cbconfigSys=new RootAlarmFlowMgrCombox();
				//				cbconfigVendor=new RootAlarmMgrCombox();
				//				cbconfigAlarmlevel=new RootAlarmMgrCombox(); 
				cbconfigSys.setCombox(transsys,'sys',sysaname);// 所属系统
				//				cbconfigVendor.setCombox(transdev,'vendor','');   //所属厂家 
				//				cbconfigAlarmlevel.setCombox(talarmlevel,'alarmlevel','');	//告警级别
				
				//				reset();
				refreshCurrentAlarm();
				//				consumers = new Object();
				//				var cm:ComhensiveMonitor = new ComhensiveMonitor();
				//                cm.subScriberRootAlarm();
			}
			
			
			public function getUserName():void{
				var rtobj:RemoteObject = new RemoteObject("RootAlarmMgrDwr");
				rtobj.endpoint = DealAlarmUtil.endpurl;
				rtobj.showBusyCursor = true;
				rtobj.getusername();
				rtobj.addEventListener(ResultEvent.RESULT,function(e:ResultEvent){
					if(e.result!=null){
						operPerson = e.result.toString();
					}
					
				})
				
			}
			
			
			
			//转为伴随告警
			private function changeFollowAlarm(event:ContextMenuEvent):void{
				//var rootalarmlist:RootAlarmList =new RootAlarmList();
				var rootalarmlist:ChangToCompanyAlarm =new ChangToCompanyAlarm();
				rootalarmlist.owner=this;
				rootalarmlist.alarmid=dg.selectedItem.alarmnumber;
				PopUpManager.addPopUp(rootalarmlist,this,true);
				PopUpManager.centerPopUp(rootalarmlist);
			}
			//确认根告警
			private function getRootAlarm(event:ContextMenuEvent):void{
				
				var isackedzh_hz=dg.selectedItem.isackedzh
				if(isackedzh_hz=="未确认"){
					alarmnumber=dg.selectedItem.alarmnumber;
					toHttp();
				}else if(isackedzh_hz=="已确认"){
					Alert.show('该告警已确认，请重新选择。',"提示信息",4,this,null,iconClass);
				}
				
			}
			
			//查询告警详细信息
			private function getRootAlarmDetail(event:ContextMenuEvent):void{
				
				var showDetail:RootAlarmDetails= new RootAlarmDetails();
				showDetail.obj = dg.selectedItem;
				PopUpManager.addPopUp(showDetail,this,true);
				PopUpManager.centerPopUp(showDetail);
				
			}
			
			
			//转为普通告警
			/* private function changeOrdinaryAlarm(event:ContextMenuEvent):void{
			var rtobj:RemoteObject= new RemoteObject("RootAlarmMgrDwr");
			rtobj.endpoint = DealAlarmUtil.endpurl;
			rtobj.showBusyCursor = true;
			var alarmid:String = dg.selectedItem.alarmnumber;
			rtobj.changeCurrentAlarmToCommonAlarm(alarmid,operPerson);
			rtobj.addEventListener(ResultEvent.RESULT,getcommonresult);
			} */
			
			
			//查看伴随告警
			private function getConcomitantAlarm (event:ContextMenuEvent) :void{
				
				//var spalarm :ConcomitantAlarm = new ConcomitantAlarm();
				//spalarm.setFilterContent(filterarray);
				var spalarm:FollowAlarm=new FollowAlarm();
				spalarm.alarmNum=dg.selectedItem.alarmnumber;
				PopUpManager.addPopUp(spalarm,this,true); 
				PopUpManager.centerPopUp(spalarm);
				
			}
			
			
			//查看频闪告警
			private function getEffectsCurrentAlarm (event:ContextMenuEvent) :void{
				
				rootAlarmWin =new TitleWindow();
				rootAlarmWin.layout="absolute";
				rootAlarmWin.x=0;
				rootAlarmWin.y=0;
				rootAlarmWin.styleName="popwindow";
				rootAlarmWin.showCloseButton="true";
				rootAlarmWin.title="频闪告警分析";
				var ram:ShowFlashAlarmDetail = new ShowFlashAlarmDetail();
				ram.alarmNumber = dg.selectedItem.alarmnumber;
				rootAlarmWin.addEventListener(CloseEvent.CLOSE,rootAlarmWinClose);
				rootAlarmWin.addChild(ram);
				PopUpManager.addPopUp(rootAlarmWin,main(Application.application),true);
				PopUpManager.centerPopUp(rootAlarmWin);
				
			}
			private function rootAlarmWinClose(evt:CloseEvent):void{
				PopUpManager.removePopUp(rootAlarmWin);
			}
			
			
			//查看告警处理经验
			private function getAlarmHelpDisplay (event:ContextMenuEvent) :void{
				
				transAlarmHelpDisplay =new TitleWindow();
				transAlarmHelpDisplay.layout="absolute";
				transAlarmHelpDisplay.x=0;
				transAlarmHelpDisplay.y=0;
				transAlarmHelpDisplay.width=this.parent.parent.stage.width;
				transAlarmHelpDisplay.height=this.parent.parent.stage.height;
				transAlarmHelpDisplay.styleName="popwindow";
				transAlarmHelpDisplay.showCloseButton="true";
				transAlarmHelpDisplay.title="告警处理经验维护";
				transAlarmHelpDisplay.titleIcon=Icon;
				var tad:AlarmHelpEXP= new AlarmHelpEXP();
				tad.vendor=dg.selectedItem.vendor;
				tad.alarmtext=dg.selectedItem.alarmdesc;
				transAlarmHelpDisplay.addEventListener(CloseEvent.CLOSE,titlewinclose);
				transAlarmHelpDisplay.addChild(tad);
				PopUpManager.addPopUp(transAlarmHelpDisplay,main(Application.application),true); 
				PopUpManager.centerPopUp(transAlarmHelpDisplay);
				
			}
			private function titlewinclose(evt:CloseEvent):void{
				PopUpManager.removePopUp(transAlarmHelpDisplay);
			}
			
			//查看影响业务
			private function getEffectBusiness (event:ContextMenuEvent) :void{
				
				var keybusiness:PopUpKeyBusiness =new PopUpKeyBusiness();
				keybusiness.alarmnumber=dg.selectedItem.alarmnumber;
				PopUpManager.addPopUp(keybusiness,this,true);
				PopUpManager.centerPopUp(keybusiness);
				
			}
			
			
			//定位到告警
			private function getFixAlarm (event:ContextMenuEvent) :void{
				
				var alarmObj=dg.selectedItem.objclasszh;
				if(alarmObj!=null && alarmObj!=""){
					if(alarmObj=="时隙" || alarmObj=="端口"){
						var strport:String=dg.selectedItem.belongportobject;
						if(strport!=null && strport!=""){
							var strarray:Array=strport.split("=");
							strport="";
							for(var i:int=0;i<strarray.length;i++)
							{  
								if(i!=strarray.length-1)
									strport+=strarray[i]+",";
								else
									strport+=strarray[i];
							}
							Registry.register("packcode", strport);
							//Registry.register("packcode", dg.selectedItem.belongportcode);
							Application.application.openModel("机盘管理视图", false);
							
						}
					}else if(alarmObj=="机盘"){
						
						Registry.register("systemcode", dg.selectedItem.belongtransys);
						Registry.register("equipcode", dg.selectedItem.belongequip);	
						//Registry.register("packcode", dg.selectedItem.belongframe);
						//Registry.register("packcode", dg.selectedItem.belongSlot);
						Application.application.openModel("设备面板图", false);
						
					}else if(alarmObj=="设备"){
						
						Registry.register("systemcode",dg.selectedItem.belongtransys);
						Registry.register("equipcode",dg.selectedItem.belongequip);
						Application.application.openModel("系统组织图", false);
					}else{
						Alert.show("无法定位该告警，请确定该告警类型","提示信息",4,this,null,iconClass);
					}
				}else{
					Alert.show("无法定位该告警，请确定该告警类型","提示信息",4,this,null,iconClass);
				}
				
			}
			
			
			/*查询*/
			
			
			public function getRootAlarmMgrInfo():void{
				pagingFunction(0,50);
			}
			
			private function pagingFunction(pageIndex:int,pageSize:int):void {
				start = pageIndex * pageSize+1;
				end = (pageIndex * pageSize) + pageSize;
				var argArray:ArrayCollection=new ArrayCollection();
				var rtobj:RemoteObject=new RemoteObject("RootAlarmMgrDwr");
				rtobj.endpoint= ModelLocator.END_POINT;
				rtobj.showBusyCursor=true;
				var rootalarmflowmgrinfo:RootAlarmFlowMgrInfo=new RootAlarmFlowMgrInfo();
				if(sysaname!=""){
					rootalarmflowmgrinfo.dealresultzh=sysaname;
				}else{
					rootalarmflowmgrinfo.dealresultzh=transsys.selectedLabel;
				}
				rootalarmflowmgrinfo.start=start+"";
				rootalarmflowmgrinfo.end=end+"";
				if(talarmobjdesc.text!=null&&talarmobjdesc.text!=""){
					rootalarmflowmgrinfo.alarmobjdesc=talarmobjdesc.text;
				}
				if(talarmdesc.text!=null&&talarmdesc.text!=""){
					rootalarmflowmgrinfo.alarmdesc=talarmdesc.text;
				}
				rtobj.getRootAlarmFlowMgrInfo(rootalarmflowmgrinfo);        //表格加载数据
				rtobj.addEventListener(ResultEvent.RESULT,loadData);
			}
			
			private function loadData(event:ResultEvent){
				var alarmInfos:ArrayCollection=event.result as ArrayCollection;
				if(alarmInfos.length==0){
					Alert.show("没有结果！","提示信息",4,this,null,iconClass);
				}
				dg.dataProvider=alarmInfos.getItemAt(0) as ArrayCollection;
				sysaname="";
				pagingToolBarforAlarmExp.orgData =alarmInfos.getItemAt(0) as ArrayCollection;
				var count:int =int(alarmInfos.getItemAt(1));
				pagingToolBarforAlarmExp.totalRecord = count;
				pagingToolBarforAlarmExp.dataBind(true);
				pagingToolBarforAlarmExp.currentPageIndex=0;
				
			}
			
			private function reset()
			{
				talarmobjdesc.text="";
				//				talarmlevel.selectedIndex=0;
				transsys.selectedIndex=0;
				talarmdesc.text="";
				//				transdev.selectedIndex=0;
			}
			/* private function getcommonresult(event:ResultEvent):void{
			
			if(event.result=="成功"){
			refreshCurrentAlarm();
			var arrayDealInfo:Array=new Array();
			arrayDealInfo[0]=alarmid;                    //告警编号
			arrayDealInfo[1]="根告警转普通告警";               //日志类型
			arrayDealInfo[2]="";                               //处理信息
			arrayDealInfo[3]=operPerson;                       //需要重写
			writeAlarmLog.addAlarm(arrayDealInfo);
			Alert.show('转为普通告警成功');
			}else{
			Alert.show('转为普通告警失败');
			}
			}  */
			
			public function refreshCurrentAlarm():void
			{
				start=0;
				end=50;
				pagingToolBarforAlarmExp.pageSizeComobox.selectedIndex=0;
				pagingToolBarforAlarmExp.pageSize=50;
				pagingToolBarforAlarmExp.isCreateNavBar=true;
				pagingFunction(start,end);
				
			}
			
			private function toHttp():void
			{
				//				Alert.show(isackedzh_hz);
				Security.loadPolicyFile(ModelLocator.getURL()+"/WEB-INF/flex/crossdomain.xml");
				var params:URLVariables = new URLVariables();
				httpService.url=DealAlarmUtil.getUrl()+"/adaptivemsg/receiveRealTimeData";
				httpService.method="post";
				params.alarmNo=alarmnumber;
				params.isCleaned = "0";
				params.msgsrc="RootAlarmMgr";
				params.biztype="backAck";
				params.isAcked="0";
				httpService.send(params);
				
			}
			public function onGetResultHandler(event:ResultEvent):void
			{
				//				Alert.show("发送成功:" + event.result.toString());
			}
			
			public function onFalutHandler(event:FaultEvent):void
			{
				Alert.show("向后台发送消息失败!","提示信息",4,this,null,iconClass);
			}
			
			private function setColorFunction(item:Object, color:uint):uint 
			{ 
				if( item['isackedzh'] == "未确认" )
				{ 
					return 0xC3F2E7; 
				}
				else if (item['isackedzh'] == "已确认")
				{
					return 0x53BABA;
				}
				return color; 
			} 
			
			public function linkRelationUI(obj:Object,alarmGrade:String):void{
				var showDetail:RootAlarmDetails= new RootAlarmDetails();
				objTrans.alarmnumber=obj.ALARMNUMBER;
				objTrans.alarmlevelname=obj.ALARMLEVELNAME;
				objTrans.alarmobjdesc=obj.ALARMOBJDESC;
				objTrans.objclasszh=obj.OBJCLASSZH;
				objTrans.laststarttime=obj.LASTSTARTTIME;
				objTrans.alarmdesc=obj.ALARMDESC;
				objTrans.belongtransys=obj.BELONGTRANSYS;
				objTrans.vendorzh=obj.VENDORZH;
				objTrans.isackedzh=obj.ISACKEDZH;
				objTrans.ackperson=obj.ACKPERSON;
				objTrans.acktime=obj.ACKTIME;
				objTrans.carrycircuit=obj.CARRYCIRCUIT;
				objTrans.specialtyzh=obj.SPECIALTYZH;
				objTrans.flashcount=obj.FLASHCOUNT;
				objTrans.triggeredthreshold=obj.TRIGGEREDTHRESHOLD;
				objTrans.isworkcase=obj.ISWORKCASE;
				objTrans.isworkcasezh=obj.ISWORKCASEZH;
				objTrans.dealresult=obj.DEALRESULT;
				objTrans.dealresultzh=obj.DEALRESULTZH;
				objTrans.bugno=obj.BUGNO;
				objTrans.isbugno=obj.ISBUGNO;
				objTrans.dutyid=obj.DUTYID;
				objTrans.dealperson=obj.DEALPERSON;
				objTrans.dealpart=obj.DEALPART;
				objTrans.dealresult=obj.DEALRESULT;
				objTrans.run_unit=obj.RUN_UNIT;
				showDetail.obj = objTrans;
				PopUpManager.addPopUp(showDetail,this,true);
				PopUpManager.centerPopUp(showDetail);
			}	
		]]>
	</mx:Script>
	<mx:HTTPService id="httpService"  useProxy="false" resultFormat="text" 
					fault="onFalutHandler(event)" result="onGetResultHandler(event)"/>
	
	
	<mx:DateFormatter id="df" formatString="YYYY-MM-DD JJ:NN:SS"/>
	
	<mx:HBox x="0" y="0" width="100%" height="100%" horizontalGap="0">
		
		<mx:VBox width="100%" height="100%" verticalGap="0">
			<!--<mx:Spacer height="20" width="100%"/>-->
			<mx:VBox width="100%" height="100%" backgroundColor="#FFFFFF" backgroundAlpha="0.7" paddingBottom="5" paddingLeft="0" paddingRight="0" paddingTop="0" verticalGap="0" borderColor="#FFFFFF" borderSides="top" borderStyle="solid" borderThickness="1" shadowDistance="2">
				<component:ControlBar id="controlBar" height="38" width="100%" modelName="当前根告警" imgName="" controlSearch="getRootAlarmMgrInfo()"/>
				
				<mx:Canvas width="100%" height="100%" >
				<mx:VBox width="100%" height="100%" backgroundColor="#FFFFFF" backgroundAlpha="0.7" paddingBottom="0"  paddingLeft="5" paddingRight="5" paddingTop="0" verticalGap="0" borderColor="#FFFFFF" borderSides="top" borderStyle="solid" borderThickness="1" shadowDistance="2" >
					<comp:ColorDataGrid id="dg" width="100%" height="100%" headerHeight="25" styleName="alarm" verticalAlign="middle" rowColorFunction="setColorFunction"  horizontalGridLineColor="#dadada" horizontalGridLines="true">
						<comp:columns>
							<mx:DataGridColumn headerText="序号"  width="50" itemRenderer="{new ClassFactory(indexRenderer)}" textAlign="center"/>
							<mx:DataGridColumn headerText="告警描述" dataField="ALARMDESC" />
							<mx:DataGridColumn headerText="告警对象" dataField="ALARMOBJDESC" width="180"/> 
							<mx:DataGridColumn headerText="告警发生时间" dataField="LASTSTARTTIME"  width="125"/>
							<mx:DataGridColumn headerText="处理方式" dataField="DEALRESULTZH" width="140"/>
							<mx:DataGridColumn headerText="告警可能原因" dataField="ISWORKCASE" width="120"/>
							<mx:DataGridColumn headerText="确认人" dataField="ACKPERSON" width="60" />
							<mx:DataGridColumn headerText="确认时间" dataField="ACKTIME" width="125" />
							<mx:DataGridColumn headerText="详细信息" dataField="INFOR" showDataTips="查看告警" width="70" >
								<mx:itemRenderer>
									<mx:Component>
										<cellrender:RollOverItemRenderer alarmGrade="查看告警" click="outerDocument.linkRelationUI(data,'ackedalarmcount')"/>
									</mx:Component>
								</mx:itemRenderer>
							</mx:DataGridColumn>
						</comp:columns>
					</comp:ColorDataGrid>
					<views:pagetoolbar width="100%" height="5%" id="pagingToolBarforAlarmExp" dataGrid="{dg}" pagingFunction="pagingFunction">
					</views:pagetoolbar>
				</mx:VBox>
				<mx:Accordion id="acc"  height="200" styleName="myAccordion" width="260" paddingBottom="0" paddingTop="0" right="20" top="0">
					<mx:Canvas label="根告警处理流向查询" id="queryCvs" width="100%" height="100%" borderColor="#CCDDEE" borderStyle="solid">
						<mx:Label text="告警对象:" styleName="blacknormalleft"  x="28" y="28"/>
						<mx:TextInput styleName="combox" width="150" id="talarmobjdesc" cornerRadius="6" x="85" y="26"></mx:TextInput>
						<mx:Label text="告警描述:" styleName="blacknormalleft"  x="28" y="56"/>
						<mx:TextInput styleName="combox" width="150" id="talarmdesc" cornerRadius="6" x="85" y="54"></mx:TextInput>
						<mx:Label text="处理方式:" styleName="blacknormalleft" x="28" y="84"/>
						<mx:ComboBox styleName="combox" width="150" id="transsys" cornerRadius="6" x="85" y="82"></mx:ComboBox>
						<mx:Button label="查询" styleName="normal" click="getRootAlarmMgrInfo()" icon="@Embed(source='/assets/images/rootalarm/search.png')" x="88.9" y="129"/>
						<mx:Button label="重置" styleName="normal" click="reset()" x="161.1" y="129"/>
					</mx:Canvas>
				</mx:Accordion>
				<base:VButtonBar id="vb" visible="true" Vdata="{ac}" accordion="{acc}" width="20"  paddingBottom="0" paddingTop="0" right="0" top="0"/>
			</mx:Canvas>
			</mx:VBox>
		</mx:VBox>
	</mx:HBox>
	
</mx:VBox>
