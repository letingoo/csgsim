<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:component="common.component.*" 
				title="选择设备"
				showCloseButton="true"
				close="{PopUpManager.removePopUp(this)}"
				creationComplete="init()"
				width="240" height="300" fontSize="13">
	<mx:Script>
		<![CDATA[
			import common.actionscript.ModelLocator;
			import common.other.events.CustomEvent;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			
			import sourceCode.resManager.resNet.titles.TopoLinkTtitle;
			[Bindable]
			public var page_parent:Object;//和父页面传递的类
			[Bindable]
			public var child_systemcode:String="";//从父页面传过来的系统code
			private var topolinkeqsearch:String="";//模糊查询的条件
			public var flog:Boolean=false;//判断是A端口还是Z端口，false为Z端口
			
			public var myCallBack:Function;//定义的方法变量
			public var myCallBack1:Function;//定义的方法变量
			public var mainApp:Object = null;
			//初始化
			private function init():void{
				var rt:RemoteObject=new RemoteObject("resNetDwr");
				rt.endpoint=ModelLocator.END_POINT;
				rt.showBusyCursor=true;
				rt.addEventListener(ResultEvent.RESULT,topolinkeqsearchHandler);
				Application.application.faultEventHandler(rt);
				rt.getEquipBytopolinksearch(child_systemcode,topolinkeqsearch);
			}
			//查询之后的处理函数
			private function topolinkeqsearchHandler(event:ResultEvent):void{
				var topolinkeqsearch:XMLList= new XMLList(event.result);
				eqsearchlist.dataProvider=topolinkeqsearch;
			}
			//模糊查询
			private function searchText_clickHandler(event:Event):void{
				topolinkeqsearch=searchText.txt.text;
				var rt:RemoteObject=new RemoteObject("resNetDwr");
				rt.endpoint=ModelLocator.END_POINT;
				rt.showBusyCursor=true;
				rt.addEventListener(ResultEvent.RESULT,topolinkeqsearchHandler);
				Application.application.faultEventHandler(rt);
				rt.getEquipBytopolinksearch(child_systemcode,topolinkeqsearch);
				
			}
			//双击list列表的处理函数
			private function doubleclickHandler(event:MouseEvent):void{
				this.close();
				if(flog==true){
					//A端端口
					page_parent.cmbEquipmentA.text=eqsearchlist.selectedItem.@label;
					//新建对象并赋值 传给父页面页面 
					var obj:Object = new Object; 
					obj.name = eqsearchlist.selectedItem.@id;
					//调用方法，并将对象参数传过去 
					myCallBack.call(mainApp,obj); 	
				}else{
					//Z端端口
					page_parent.cmbEquipmentZ.text=eqsearchlist.selectedItem.@label;
					//创建对象并赋值，传给父页面
					var obj1:Object=new Object;
					obj1.name=eqsearchlist.selectedItem.@id;
					//调用方法，并将对象参数传过去
					myCallBack1.call(mainApp,obj1); 	
				}
			}
			//关闭窗体
			private function close():void{
				PopUpManager.removePopUp(this);
				
			}
		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%">
		<component:SearchTextInput id="searchText" height="35" width="100%" clickButton="searchText_clickHandler(event)" />
		<mx:List id="eqsearchlist" labelField="@label" width="100%" height="100%" doubleClickEnabled="true" doubleClick="doubleclickHandler(event)"/>
	</mx:VBox>
	
	
</mx:TitleWindow>
