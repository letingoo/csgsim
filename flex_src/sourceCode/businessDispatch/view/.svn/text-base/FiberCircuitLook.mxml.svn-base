<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
				xmlns:flex="http://www.servasoftware.com/2009/twaver/flex" 
				xmlns:panel="common.other.SuperPanelControl.nl.wv.extenders.panel.*" 
				showCloseButton="true" close="{PopUpManager.removePopUp(this)}"
				layout="absolute" title="方式信息" fontSize="13" 
				minWidth="955" minHeight="600" 
				width="{parentApplication.workspace.width}" height="{parentApplication.workspace.height}" 
				creationComplete="initApp()">
	<mx:Style>
		.textinput{
			paddingTop : 5;
			border-style:none;
		}
		.banner{
			color : #000000;
		}
		.singleButton{
			cornerRadius : 10;
		}
		.gradientCanvas{
			backgroundGradientColors : #CFCFCF, #A8A8A8;
			backgroundGradientAlphas : 1, 1;
			backgroundGradientRotation : 90;
		}
		
		.darkbg{
			backgroundImage: Embed(source='assets/images/page_bg.png');
			backgroundSize: '100%';
			backgroundAttachment: fixed;
		}
		HBox.sat
		{
			borderStyle: solid;
			borderThickness: 1;
			borderSides: top,bottom;
			backgroundColor: #FDF8DB;
			verticalAlign: middle;
			horizontalAlign: left;
			paddingLeft: 10;
			paddingRight: 10;
			borderColor: #F4E173;
		}
		Text.pagepart {
			color: #990000;
			fontFamily: Arial;
			fontSize: 14;
			fontWeight: bold;
		}
		HBox.pagetitle
		{
			fontFamily: Arial;
			fontSize: 16;
			fontWeight: bold;
			borderStyle: solid;
			borderThickness: 1;
			borderSides: bottom;
		}
		HBox.pagebg
		{
			verticalAlign: middle;
			horizontalAlign: center;
			paddingTop: 10;
			paddingLeft: 10;
			paddingRight: 10;
			paddingBottom: 20;
			backgroundAttachment: fixed;
		}
		VBox.page
		{
			backgroundColor: #FFFFFF;
			paddingBottom: 40;
			paddingTop: 30;
			paddingLeft: 20;
			paddingRight: 20;
			shadowDistance: 3;
			shadowDirection: right;
			dropShadowEnabled: true;
			dropShadowColor: #000000;
			borderStyle: solid;
			borderThickness: 1;
			borderSkin: Embed(source='assets/images/pagebg.png',scaleGridLeft='3',scaleGridTop='3',scaleGridRight='203',scaleGridBottom='203');
		}
		Text.blacknormal {
			color: #000000;
			fontFamily: Arial;
			fontSize: 12;
			fontWeight: normal;
		}
		Grid.gridout
		{
			borderStyle: solid;
			borderThickness: 1;
			borderSides: top,left;
			horizontalGap: 0;
			verticalGap: 0;
			borderColor: #d5e1fd;
		}
		GridItem.griditem
		{
			borderThickness: 1;
			borderStyle: solid;
			borderSides: bottom,right;
			horizontalAlign: left;
			verticalAlign: middle;
			borderColor: #D5E1FD;
			fontFamily: Arial;
			fontSize: 12;
			paddingLeft: 3;
		}
		GridItem.griditemlabel
		{
			borderThickness: 1;
			borderStyle: solid;
			borderSides: bottom,right;
			horizontalAlign: right;
			verticalAlign: middle;
			borderColor: #D5E1FD;
			backgroundColor: #ecf2fe;
			fontFamily: Arial;
			fontWeight: bold;
			fontSize: 12;
			paddingRight: 3;
			backgroundImage: Embed(source='assets/images/gridlabelbg.png');
			backgroundSize: "100%";
		}
		.singleButton{
			cornerRadius : 10;
		}
		.gradientCanvas{
			backgroundGradientColors : #CFCFCF, #A8A8A8;
			backgroundGradientAlphas : 1, 1;
			backgroundGradientRotation : 90;
		}
		TextInput.intable
		{
			fontFamily: Arial;
			fontSize: 12;
			paddingTop: 2;
			paddingBottom: 2;
			paddingRight: 2;
			paddingLeft: 2;
			borderStyle: none;
		}
	</mx:Style>
	<mx:Script>
		
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import common.actionscript.ModelLocator;
			import common.actionscript.Registry;
			import common.other.events.CustomEvent;
			import common.other.events.EventNames;
			
			import flash.events.ContextMenuEvent;
			import flash.geom.Point;
			import flash.ui.ContextMenu;
			
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.collections.XMLListCollection;
			import mx.controls.*;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.core.DragSource;
			import mx.core.UIComponent;
			import mx.effects.Parallel;
			import mx.events.DragEvent;
			import mx.events.EffectEvent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ItemClickEvent;
			import mx.events.ListEvent;
			import mx.events.MenuEvent;
			import mx.events.ModuleEvent;
			import mx.events.TreeEvent;
			import mx.graphics.codec.PNGEncoder;
			import mx.managers.DragManager;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			
			import sourceCode.autoGrid.view.ShowProperty;
			import sourceCode.packGraph.views.viewEquipPackDuanKouPropertiesInfo;
			
			import twaver.*;
			import twaver.DemoUtils;
			import twaver.controls.GifImage;
			import twaver.network.Network;
			import twaver.network.Overview;
			import twaver.network.interaction.InteractionEvent;
			import twaver.network.layout.AutoLayouter;
			import twaver.network.layout.SpringLayouter;
			public var circuitbh:String = ""
			public var CCcode:String = "";
			//			private var itemCarryOperaInfo:carryOpera;//设备业务页面
			private var duanKouProperties :viewEquipPackDuanKouPropertiesInfo;//端口属性
			public var form_name:String;
			
			protected function initApp():void{
				
				//lowId.selectedIndex=0;
				var box:ElementBox = circuit.elementBox;
				box.clear();
				var obj:RemoteObject = new RemoteObject("businessDispatch");
				obj.endpoint = ModelLocator.END_POINT;
				obj.showBusyCursor=true;
				circuit.name = CCcode;
				obj.getFiberCicuitView(CCcode);
				obj.addEventListener(ResultEvent.RESULT, drawCircuit);
				
				if(CCcode != null && CCcode != ""){
					canvas1.label = canvas1.label + "-" + CCcode;
//					canvas2.label = canvas2.label + "-" + CCcode;
					channelbox1.label = channelbox1.label + "-" + CCcode;
				}
				
				/* 	lowId.selectedIndex=0;
				isClick=true;
				var node:XML = channeltree.selectedItem as XML;
				if(node.@leaf=='true'){
				var box:ElementBox = channelPic.elementBox;
				box.clear();
				var rtobj:RemoteObject = new RemoteObject("channelRoute");
				rtobj.endpoint = ModelLocator.END_POINT;
				rtobj.showBusyCursor = "true";
				var circuitcode:String = node.@label;
				NodeLabel=circuitcode;
				rtobj.getChannelRoute(circuitcode);
				channelPic.name=circuitcode;
				channelbox.label = circuitcode;
				channelbox1.label = '方式单-'+circuitcode;
				rtobj.addEventListener(ResultEvent.RESULT,drawPic); */
//				Utils.registerImageByClass("ZY0816$FT010214circuit",ModelLocator.ZY0816$FT010214circuit);
//				Utils.registerImageByClass("ZY0816$FT010213circuit",ModelLocator.ZY0816$FT010213circuit);
//				Utils.registerImageByClass("ZY0816$FT0102circuit",ModelLocator.ZY0816$FT0102circuit);
//				Utils.registerImageByClass("ZY0815$Series 3 SMA1/4ccircuit",ModelLocator.ZY0815$Series3SMA1$4ccircuit);
//				Utils.registerImageByClass("ZY0815$Series 3 SMA16circuit",ModelLocator.ZY0815$Series3SMA16circuit);
//				Utils.registerImageByClass("ZY0815$Series 3 SMA4/16ccircuit",ModelLocator.ZY0815$Series3SMA416ccircuit);
//				Utils.registerImageByClass("ZY0815$Series 3 SMA4circuit",ModelLocator.ZY0815$Series3SMA4circuit);
//				Utils.registerImageByClass("ZY0804$hiT7070 SC DTCcircuit", ModelLocator.ZY0804$hiT7070SCDTCcircuit);
//				Utils.registerImageByClass("ZY0804$hiT7070 SCcircuit", ModelLocator.ZY0804$hiT7070SCcircuit);
//				Utils.registerImageByClass("ZY0804$hiT7070 DCcircuit", ModelLocator.ZY0804$hiT7070DCcircuit);
//				Utils.registerImageByClass("ZY0815$OMS3255 (160 G)circuit",ModelLocator.ZY0815$OMS3255$160G$circuit);
//				Utils.registerImageByClass("ZY0817$guangxuncircuit",ModelLocator.ZY0817$guangxuncircuit);
//				Utils.registerImageByClass("ZY0815$Series 4 SMA1/4 (4+4)circuit",ModelLocator.ZY0815$Series4SMA144$4circuit);
//				Utils.registerImageByClass("ZY0823$Series 3 SMA1/4ccircuit",ModelLocator.ZY0823$Series3SMA14ccircuit);
				
				
				
				Utils.registerImageByClass("equipIcon",ModelLocator.equipIcon );	
//				Utils.registerImageByClass("ZY0801", ModelLocator.ZY0801);	
//				Utils.registerImageByClass("ZY0801$FT0102", ModelLocator.ZY0801$FT0102);	
//				Utils.registerImageByClass("ZY0801$OptiX2500+", ModelLocator.ZY0801$OptiX2500$);
//				Utils.registerImageByClass("ZY0801$OptiX 2500+", ModelLocator.ZY0801$OptiX2500$);
//				Utils.registerImageByClass("ZY0801$OptiXOSN3500", ModelLocator.ZY0801$OptiXOSN3500);
//				Utils.registerImageByClass("ZY0801$OptiX OSN 3500", ModelLocator.ZY0801$OptiXOSN3500);
//				Utils.registerImageByClass("ZY0801$OptiXOSN7500", ModelLocator.ZY0801$OptiXOSN7500);
//				Utils.registerImageByClass("ZY0801$OptiX OSN 7500", ModelLocator.ZY0801$OptiXOSN7500);
//				Utils.registerImageByClass("ZY0802$ZXMP S385", ModelLocator.ZY0802$ZXMPS385);
//				Utils.registerImageByClass("ZY0804$FT010213", ModelLocator.ZY0804$FT010213);
//				Utils.registerImageByClass("ZY0804$hiT7070DC", ModelLocator.ZY0804$hiT7070DC);
//				Utils.registerImageByClass("ZY0804$hiT7070SC", ModelLocator.ZY0804$hiT7070SC);
//				Utils.registerImageByClass("ZY0804$hiT7070SCDTC", ModelLocator.ZY0804$hiT7070SCDTC);
//				Utils.registerImageByClass("ZY0804$SLD16B", ModelLocator.ZY0804$SLD16B);
//				Utils.registerImageByClass("ZY0804$SLD16BE", ModelLocator.ZY0804$SLD16BE);
//				Utils.registerImageByClass("ZY0804$SLR16", ModelLocator.ZY0804$SLR16);
//				Utils.registerImageByClass("ZY0804$SMA1/4C", ModelLocator.ZY0804$SMA14C);
//				Utils.registerImageByClass("ZY0804$SMA16", ModelLocator.ZY0804$SMA16);
//				Utils.registerImageByClass("ZY0804$SMA16/4", ModelLocator.ZY0804$SMA164);
//				Utils.registerImageByClass("ZY0805$ADM-U", ModelLocator.ZY0805$ADM$U);
//				Utils.registerImageByClass("ZY0807$FT0102", ModelLocator.ZY0807$FT0102);
//				Utils.registerImageByClass("ZY0807$XDM-100", ModelLocator.ZY0807$XDM$100);
//				Utils.registerImageByClass("ZY0809$1660SM", ModelLocator.ZY0809$1660SM);
//				Utils.registerImageByClass("ZY0809", ModelLocator.ZY0809);
//				Utils.registerImageByClass("ZY0809$FT0102", ModelLocator.ZY0809$FT0102);
//				Utils.registerImageByClass("ZY0899$FT0102", ModelLocator.ZY0899$FT0102);
//				Utils.registerImageByClass("ZY0899$FT010213",ModelLocator.ZY0899$FT010213);
//				Utils.registerImageByClass("ZY0809$GenericNE", ModelLocator.ZY0809$GenericNE);
//				Utils.registerImageByClass("ZY0812", ModelLocator.ZY0812);
//				Utils.registerImageByClass("ZY0812$FT0102", ModelLocator.ZY0812$FT0102);
//				Utils.registerImageByClass("ZY0812$FT010213", ModelLocator.ZY0812$FT010213);
//				Utils.registerImageByClass("ZY0812$SDM-1", ModelLocator.ZY0812$SDM$1);
//				Utils.registerImageByClass("ZY0812$SDM-4L", ModelLocator.ZY0812$SDM$4L);
//				Utils.registerImageByClass("ZY0812$SDM-4R", ModelLocator.ZY0812$SDM$4R);
//				Utils.registerImageByClass("ZY0812$XDM-100", ModelLocator.ZY0812$XDM$100);
//				Utils.registerImageByClass("ZY0812$XDM-500", ModelLocator.ZY0812$XDM$500);
//				Utils.registerImageByClass("ZY0812$XDM-500X4", ModelLocator.ZY0812$XDM$500X4);
//				Utils.registerImageByClass("ZY0812$XDM-1000", ModelLocator.ZY0812$XDM$1000);
//				Utils.registerImageByClass("ZY0812$XDM-1000X2", ModelLocator.ZY0812$XDM$1000X2);
//				Utils.registerImageByClass("ZY0814$FT0102", ModelLocator.ZY0814$FT0102);
//				Utils.registerImageByClass("ZY0814$FT010213", ModelLocator.ZY0814$FT010213);
//				Utils.registerImageByClass("ZY0814$SMS-150V", ModelLocator.ZY0814$SMS$150V);
//				Utils.registerImageByClass("ZY0814$SMS-600V", ModelLocator.ZY0814$SMS$600V);
//				Utils.registerImageByClass("ZY0815$OMS1664", ModelLocator.ZY0815$OMS1664);
//				Utils.registerImageByClass("ZY0815$FT0102", ModelLocator.ZY0815$FT0102);
//				Utils.registerImageByClass("ZY0815$FT010203", ModelLocator.ZY0815$FT010203);
//				Utils.registerImageByClass("ZY0815$FT010213", ModelLocator.ZY0815$FT010213);
//				Utils.registerImageByClass("ZY0815$OMS1240-4", ModelLocator.ZY0815$OMS1240$4);
//				Utils.registerImageByClass("ZY0815$OMS1654", ModelLocator.ZY0815$OMS1654);								
//				Utils.registerImageByClass("ZY0815$OMS860", ModelLocator.ZY0815$OMS860);
//				Utils.registerImageByClass("ZY0815$Series4SMA1/4(4+4)",ModelLocator.ZY0815$Series4SMA144$4);
//				Utils.registerImageByClass("ZY0815$Series3SMA1/4c",ModelLocator.ZY0815$Series3SMA1$4c);	
//				Utils.registerImageByClass("ZY0815$OMS3255(160 G)",ModelLocator.ZY0815$OMS3255$160G);
//				Utils.registerImageByClass("ZY0815$OMS3240/MSH64C",ModelLocator.ZY0815$OMS3240MSH64C);
//				Utils.registerImageByClass("ZY0815$Series3SMA16",ModelLocator.ZY0815$Series3SMA16);
//				Utils.registerImageByClass("ZY0815$Series3SMA4",ModelLocator.ZY0815$Series3SMA4);
//				Utils.registerImageByClass("ZY0815$Series3SMA4/16c",ModelLocator.ZY0815$Series3SMA416c);	
//				Utils.registerImageByClass("ZY0823$Series3SMA1/4c",ModelLocator.ZY0823$Series3SMA14c);
//				Utils.registerImageByClass("ZY0804", ModelLocator.ZY0804);
//				Utils.registerImageByClass("ZY0807", ModelLocator.ZY0807);	
//				Utils.registerImageByClass("ZY0801circuit", ModelLocator.ZY0801circuit);	
//				Utils.registerImageByClass("ZY0801$FT0102circuit", ModelLocator.ZY0801$FT0102circuit);	
//				Utils.registerImageByClass("ZY0801$OptiX2500+circuit", ModelLocator.ZY0801$OptiX2500$circuit);
//				Utils.registerImageByClass("ZY0801$OptiX 2500+circuit", ModelLocator.ZY0801$OptiX2500$circuit);
//				Utils.registerImageByClass("ZY0801$OptiXOSN3500circuit", ModelLocator.ZY0801$OptiXOSN3500circuit);
//				Utils.registerImageByClass("ZY0801$OptiX OSN 3500circuit", ModelLocator.ZY0801$OptiXOSN3500circuit);
//				Utils.registerImageByClass("ZY0801$OptiXOSN7500circuit", ModelLocator.ZY0801$OptiXOSN7500circuit);
//				Utils.registerImageByClass("ZY0801$OptiX OSN 7500circuit", ModelLocator.ZY0801$OptiXOSN7500circuit);
//				Utils.registerImageByClass("ZY0802$ZXMP S385circuit", ModelLocator.ZY0802$ZXMPS385circuit);
//				Utils.registerImageByClass("ZY0802$ZXMPS385circuit", ModelLocator.ZY0802$ZXMPS385circuit);
//				Utils.registerImageByClass("ZY0804$FT010213circuit", ModelLocator.ZY0804$FT010213circuit);
//				Utils.registerImageByClass("ZY0804$hiT7070DCcircuit", ModelLocator.ZY0804$hiT7070DCcircuit);
//				Utils.registerImageByClass("ZY0804$hiT7070SCcircuit", ModelLocator.ZY0804$hiT7070SCcircuit);
//				Utils.registerImageByClass("ZY0804$hiT7070SCDTCcircuit", ModelLocator.ZY0804$hiT7070SCDTCcircuit);
//				Utils.registerImageByClass("ZY0804$SLD16Bcircuit", ModelLocator.ZY0804$SLD16Bcircuit);
//				Utils.registerImageByClass("ZY0804$SLD16BEcircuit", ModelLocator.ZY0804$SLD16BEcircuit);
//				Utils.registerImageByClass("ZY0804$SLR16circuit", ModelLocator.ZY0804$SLR16circuit);
//				Utils.registerImageByClass("ZY0804$SMA1/4Ccircuit", ModelLocator.ZY0804$SMA14Ccircuit);
//				Utils.registerImageByClass("ZY0804$SMA16circuit", ModelLocator.ZY0804$SMA16circuit);
//				Utils.registerImageByClass("ZY0804$SMA16/4circuit", ModelLocator.ZY0804$SMA164circuit);
//				Utils.registerImageByClass("ZY0805$ADM-Ucircuit", ModelLocator.ZY0805$ADM$Ucircuit);
//				Utils.registerImageByClass("ZY0807$FT0102circuit", ModelLocator.ZY0807$FT0102circuit);
//				Utils.registerImageByClass("ZY0807$XDM-100circuit", ModelLocator.ZY0807$XDM$100circuit);
//				Utils.registerImageByClass("ZY0809$1660SMcircuit", ModelLocator.ZY0809$1660SMcircuit);
//				Utils.registerImageByClass("ZY0809circuit", ModelLocator.ZY0809circuit);
//				Utils.registerImageByClass("ZY0809$FT0102circuit", ModelLocator.ZY0809$FT0102circuit);
//				Utils.registerImageByClass("ZY0899$FT0102circuit", ModelLocator.ZY0899$FT0102circuit);
//				Utils.registerImageByClass("ZY0899$FT010213circuit",ModelLocator.ZY0899$FT010213circuit);
//				Utils.registerImageByClass("ZY0809$GenericNEcircuit", ModelLocator.ZY0809$GenericNEcircuit);
//				Utils.registerImageByClass("ZY0812circuit", ModelLocator.ZY0812circuit);
//				Utils.registerImageByClass("ZY0812$FT0102circuit", ModelLocator.ZY0812$FT0102circuit);
//				Utils.registerImageByClass("ZY0812$FT010213circuit", ModelLocator.ZY0812$FT010213circuit);
//				Utils.registerImageByClass("ZY0812$SDM-1circuit", ModelLocator.ZY0812$SDM$1circuit);
//				Utils.registerImageByClass("ZY0812$SDM-4Lcircuit", ModelLocator.ZY0812$SDM$4Lcircuit);
//				Utils.registerImageByClass("ZY0812$SDM-4Rcircuit", ModelLocator.ZY0812$SDM$4Rcircuit);
//				Utils.registerImageByClass("ZY0812$XDM-100circuit", ModelLocator.ZY0812$XDM$100circuit);
//				Utils.registerImageByClass("ZY0812$XDM-500circuit", ModelLocator.ZY0812$XDM$500circuit);
//				Utils.registerImageByClass("ZY0812$XDM-500X4circuit", ModelLocator.ZY0812$XDM$500X4circuit);
//				Utils.registerImageByClass("ZY0812$XDM-1000circuit", ModelLocator.ZY0812$XDM$1000circuit);
//				Utils.registerImageByClass("ZY0812$XDM-1000X2circuit", ModelLocator.ZY0812$XDM$1000X2circuit);
//				Utils.registerImageByClass("ZY0814$FT0102circuit", ModelLocator.ZY0814$FT0102circuit);
//				Utils.registerImageByClass("ZY0814$FT010213circuit", ModelLocator.ZY0814$FT010213circuit);
//				Utils.registerImageByClass("ZY0814$SMS-150Vcircuit", ModelLocator.ZY0814$SMS$150Vcircuit);
//				Utils.registerImageByClass("ZY0814$SMS-600Vcircuit", ModelLocator.ZY0814$SMS$600Vcircuit);
//				Utils.registerImageByClass("ZY0815$OMS1664circuit", ModelLocator.ZY0815$OMS1664circuit);
//				Utils.registerImageByClass("ZY0815$FT0102circuit", ModelLocator.ZY0815$FT0102circuit);
//				Utils.registerImageByClass("ZY0815$FT010203circuit", ModelLocator.ZY0815$FT010203circuit);
//				Utils.registerImageByClass("ZY0815$FT010213circuit", ModelLocator.ZY0815$FT010213circuit);
//				Utils.registerImageByClass("ZY0815$OMS1240-4circuit", ModelLocator.ZY0815$OMS1240$4circuit);
//				Utils.registerImageByClass("ZY0815$OMS1654circuit", ModelLocator.ZY0815$OMS1654circuit);								
//				Utils.registerImageByClass("ZY0815$OMS860circuit", ModelLocator.ZY0815$OMS860circuit);
//				Utils.registerImageByClass("ZY0815$Series4SMA1/4(4+4)circuit",ModelLocator.ZY0815$Series4SMA144$4circuit);
//				Utils.registerImageByClass("ZY0815$Series3SMA1/4ccircuit",ModelLocator.ZY0815$Series3SMA1$4ccircuit);	
//				Utils.registerImageByClass("ZY0815$OMS3255(160 G)circuit",ModelLocator.ZY0815$OMS3255$160G$circuit);
//				Utils.registerImageByClass("ZY0815$OMS3240/MSH64Ccircuit",ModelLocator.ZY0815$OMS3240MSH64Ccircuit);
//				Utils.registerImageByClass("ZY0815$Series3SMA16circuit",ModelLocator.ZY0815$Series3SMA16circuit);
//				Utils.registerImageByClass("ZY0815$Series3SMA4circuit",ModelLocator.ZY0815$Series3SMA4circuit);
//				Utils.registerImageByClass("ZY0815$Series3SMA4/16ccircuit",ModelLocator.ZY0815$Series3SMA416ccircuit);	
//				Utils.registerImageByClass("ZY0823$Series3SMA1/4ccircuit",ModelLocator.ZY0823$Series3SMA14ccircuit);
//				Utils.registerImageByClass("ZY0804circuit", ModelLocator.ZY0804circuit);
//				Utils.registerImageByClass("ZY0807circuit", ModelLocator.ZY0807circuit);	
//				Utils.registerImageByClass("Cloud",ModelLocator.Cloud);
//				Utils.registerImageByClass("Port",ModelLocator.portcircuit);
//				Utils.registerImageByClass("csd",ModelLocator.csd);
//				Utils.registerImageByClass("Portright",ModelLocator.portrightcircuit);
//				
				SerializationSettings.registerGlobalClient("flag", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("equipcode", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("x_vendor", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("x_model", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("topoid", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("portcode", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("tsrate", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("timeslot", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("port_a", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("port_z", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("circuitProperty", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("childModelProperty", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("virtualTopoLinkProperty", Consts.TYPE_ARRAY_STRING);
				SerializationSettings.registerGlobalClient("isdefault", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("hasVirtualTopolinkValue", Consts.TYPE_STRING);
				
				SerializationSettings.registerGlobalClient("formId", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("executeDeptName", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("executeDeptCode", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("applyPerson", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("applyDeptName", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("applyDeptCode", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("applyDate", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("endDate", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("aStationName", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("zStationName", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("aEquipName", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("zEquipName", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("rateName", Consts.TYPE_ARRAY_STRING);
				SerializationSettings.registerGlobalClient("rateCode", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("requisitionID", Consts.TYPE_STRING);
				
				SerializationSettings.registerGlobalClient("equip_a", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("equip_a_code", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("port_a_code", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("systemcode", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("linerate", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("linerateName", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("slot_z", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("equip_z", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("frame_z", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("pack_z_name", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("pack_z_serial", Consts.TYPE_ARRAY_STRING);
				
				SerializationSettings.registerGlobalClient("slotSerial", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("packSerial", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("packName", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("portSerial", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("portRate", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("portRateName", Consts.TYPE_STRING);
				
				SerializationSettings.registerGlobalClient("topolinkProperty", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("frame_a", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("slot_a", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("pack_a_serial", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("pack_a_name", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("hasTopoLinkValue", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("topolinkProperty", Consts.TYPE_STRING);
				
				
				SerializationSettings.registerGlobalClient("systemjumpProperty", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("formName", Consts.TYPE_STRING);
				
				
				
				SerializationSettings.registerGlobalClient("isbranch", Consts.TYPE_STRING);
				SerializationSettings.registerGlobalClient("position", Consts.TYPE_INT);
				SerializationSettings.registerGlobalClient("cc", Consts.TYPE_STRING);
				addContextMenu();//右键
				
			}
			private function addContextMenu():void{
				
				circuit.contextMenu = new ContextMenu();
				circuit.contextMenu.addEventListener(ContextMenuEvent.MENU_SELECT, function(e:ContextMenuEvent):void{
					//右键选中网元
					var p:Point = new Point(e.mouseTarget.mouseX / circuit.zoom, e.mouseTarget.mouseY / circuit.zoom);
					var datas:ICollection = circuit.getElementsByLocalPoint(p);
					//定制右键菜单
					var flexVersion:ContextMenuItem = new ContextMenuItem(DemoUtils.FLEX_SDK_VERSION, false, false);
					var playerVersion:ContextMenuItem = new ContextMenuItem(DemoUtils.FLASH_PLAYER_VERSION, false, false);
					if(circuit.selectionModel.count == 0){//选中元素个数
						
						circuit.contextMenu.customItems = [flexVersion, playerVersion];
					}
					else{
						circuit.contextMenu.customItems = [flexVersion, playerVersion];
						if (((Element)(circuit.selectionModel.selection.getItemAt(0)) is Node)&&(circuit.selectionModel.selection.getItemAt(0).getClient("flag")=='equipment')) 
						{//选中节 
							var item0:ContextMenuItem = new ContextMenuItem("显示设备属性");
							item0.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, itemSelectHandler);
							circuit.contextMenu.hideBuiltInItems();
							circuit.contextMenu.customItems = [item0];
						}
						if (((Element)(circuit.selectionModel.selection.getItemAt(0)) is Link)&&(circuit.selectionModel.selection.getItemAt(0).getClient("flag")=='topolink')) 
						{//选中节  
							var item4:ContextMenuItem = new ContextMenuItem("显示复用段属性");
							item4.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, itemSelectHandler_Ocable);
							circuit.contextMenu.hideBuiltInItems();
							circuit.contextMenu.customItems = [item4];
						}
						if(((Element)(circuit.selectionModel.selection.getItemAt(0)) is Follower)&&(circuit.selectionModel.selection.getItemAt(0).getClient("flag")=='port')){
							var item:ContextMenuItem = new ContextMenuItem("显示端口属性");
							item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, itemSelectHandler_port);
							circuit.contextMenu.hideBuiltInItems();
							circuit.contextMenu.customItems = [item]; 
						}
						if(((Element)(circuit.selectionModel.selection.getItemAt(0)) is Node)&&(circuit.selectionModel.selection.getItemAt(0).getClient("flag")=='cloud')){
							var item:ContextMenuItem = new ContextMenuItem("查看子方式单");
							item.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, addChildModel);
							circuit.contextMenu.hideBuiltInItems();
							circuit.contextMenu.customItems = [item];
						} 
					}
				});	
			}
			
			private function addChildModel(e:ContextMenuEvent):void{
				var node:Node = circuit.selectionModel.selection.getItemAt(0) as Node;
				var child:childmodel = new childmodel();
				child.node = node;
				child.isUse= false;
				PopUpManager.addPopUp(child, this, true);
				child.formName.text = form_name; 
				PopUpManager.centerPopUp(child);
			}
			
			private function itemSelectHandler(e:ContextMenuEvent):void{
				var node:Node = (Element)(circuit.selectionModel.lastData);
				var property:ShowProperty = new ShowProperty();
				property.paraValue = node.getClient("equipcode");
				property.tablename = "VIEW_EQUIPMENT";
				property.key = "EQUIPCODE";
				if(node.name.split("(").length > 1)
					property.title = node.name.split("(")[0]+"—设备属性";
				else
					property.title = "设备属性";
				PopUpManager.addPopUp(property, this, true);
				PopUpManager.centerPopUp(property);
			}
			
			private function itemSelectHandler_Ocable(e:ContextMenuEvent):void{
				var link:Link = (Element)(circuit.selectionModel.lastData);
				try{
					var topolinkid:String=link.getClient("code").toString();
					var labelname:String=link.getClient("labelname").toString();
					var property:ShowProperty = new ShowProperty();
					property.paraValue = topolinkid;
					property.tablename = "VIEW_ENTOPOLINKPROPERTY";
					property.key = "label";	
					labelname = labelname+"—复用段属性";
					property.toolTip = labelname;
					if(labelname.length>51){
						labelname = labelname.substring(0,51)+"......";
					}
					property.title = labelname;	
					PopUpManager.addPopUp(property, this, true);
					PopUpManager.centerPopUp(property);
				}catch(e:Error){
					Alert.show("提取数据出现错误,请核实!","提示");
				}
			}
			
			private function itemSelectHandler_port(evt:ContextMenuEvent):void{
				var follow:Follower = circuit.selectionModel.selection.getItemAt(0) as Follower;
				var portcode:String=follow.getClient("portcode");
				if(portcode!=null){
					portcode = portcode.split(",")[0];
				}
				var portname:String = circuit.selectionModel.lastData.name;
				var property:ShowProperty = new ShowProperty();
				property.paraValue = portcode;
				property.tablename = "VIEW_EQUIPLOGICPORT_PROPERTY";
				property.key = "LOGICPORT";
				property.title = portname+"—端口属性";
				PopUpManager.addPopUp(property, this, true);
				PopUpManager.centerPopUp(property);
			}
			
			private function drawCircuit(e:ResultEvent):void{
				circuit.elementBox.clear();
				var serializer:XMLSerializer = new XMLSerializer(circuit.elementBox);
				serializer.deserialize(e.result.toString());
			}
			
			protected function changeHandler(event:IndexChangedEvent):void
			{
				var flag:String = lowId.getTabAt(lowId.selectedIndex).label;
				if(flag.indexOf("方式基本信息") != -1){
					if(CCcode != null && CCcode != ""){
						var remoteobj:RemoteObject = new RemoteObject("businessDispatch");
						remoteobj.endpoint = ModelLocator.END_POINT;
						remoteobj.showBusyCursor = true;
						remoteobj.getFiberCircuitInfo(CCcode);		
						remoteobj.addEventListener(ResultEvent.RESULT, getChannelRouteResult);	
					}
				}
//				if(flag.indexOf("电路路由图") != -1){
//					if(toolbar1.getStyle("horizontalGap") != '4'){
//						DemoUtilsForChannel.initNetworkToolbar(toolbar1, channelPic, "默认模式");
//					}
//					if(CCcode != null && CCcode != ""){
//						var rtobj:RemoteObject = new RemoteObject("channelRoute");
//						rtobj.endpoint = ModelLocator.END_POINT;
//						rtobj.showBusyCursor = "true";
//						rtobj.getChannelRoute1(CCcode);
//						rtobj.addEventListener(ResultEvent.RESULT, drawChannelPic)
//					}
//				}
			}
			
//			private function drawChannelPic(e:ResultEvent):void{
//				
//				if(e.result!=null&&e.result.toString()!=""){
//					channelPic.elementBox.clear();
//					var serializer:XMLSerializer = new XMLSerializer(channelPic.elementBox);
//					serializer.deserialize(e.result.toString());
//				}else{
//					Alert.show("电路路由图不存在，电路未开通！","温馨提示");
//					
//				}
//			}
			
			private function getChannelRouteResult(e:ResultEvent):void{
				circuitcode.text=CCcode;
				remark.text=e.result.remark;
				userCom.text=e.result.userCom;
				requestCom.text=e.result.requestCom;
				userName.text=e.result.userName;
				operationType.text=e.result.operationType;
				rate.text=e.result.rate;
				circuitLevel.text=e.result.circuitLevel;
				interfaceType.text=e.result.interfaceType;
				state.text=e.result.state;
				station1.text=e.result.station1;
				station2.text=e.result.station2;
				equipCode1.text=e.result.equipCode1;
				equipCode2.text=e.result.equipCode2;
				portserialno1.text=e.result.portserialno1;
				portserialno2.text=e.result.portserialno2;
				leaser.text =e.result.updateperson;
				createTime.text=e.result.createTime;
				requiSitionId.text=e.result.beiZhu;
				TxtImplementation_units.text=e.result.implementation_units;
				TxtFSDcode.text=form_name;
				requestFinish_time.text = e.result.useTime;
			}
			
			protected function Excel_clickHandler(event:MouseEvent):void
			{
				var bitmapData:BitmapData = circuit.exportAsBitmapData(); 
				var encoder:PNGEncoder = new PNGEncoder();
				var data:ByteArray = encoder.encode(bitmapData);
				if(circuit.name != 'circuit1'){
					var rtobj:RemoteObject = new RemoteObject("businessDispatch");
					rtobj.endpoint = ModelLocator.END_POINT;
					rtobj.showBusyCursor = true;
					rtobj.getByteData(data);
					rtobj.addEventListener(ResultEvent.RESULT, function(){
						exportExcel(circuit);
					})
				}else{
					Alert.show("请先关联方式后再执行导出EXCEL操作！","温馨提示");
				}
			}
			public static function exportExcel(circuit:Network):void{
				var url:String = getURL();
				var rtobj:RemoteObject = new RemoteObject("businessDispatch");
				rtobj.endpoint = ModelLocator.END_POINT;
				rtobj.showBusyCursor = true;
				rtobj.exportFiberExcel(circuit.name, url);
				rtobj.addEventListener(ResultEvent.RESULT, function(event:ResultEvent){
					exportExcelResult(event, circuit, url);
				});
			}
			public static function exportExcelResult(event:ResultEvent, circuit:Network, url:String):void{
				
				var path = url + "assets/excels/expfiles/" + circuit.name + ".xls";
				
				var request:URLRequest = new URLRequest(encodeURI(path));
				
				navigateToURL(request, "_blank");
				
			}
			private static function getURL():String{
				var currSwfUrl:String; 
				var doMain:String = Application.application.stage.loaderInfo.url;  
				var doMainArray:Array = doMain.split("/");  
				
				if (doMainArray[0] == "file:") {  
					if(doMainArray.length<=3){  
						currSwfUrl = doMainArray[2];  
						currSwfUrl = currSwfUrl.substring(0,currSwfUrl.lastIndexOf(currSwfUrl.charAt(2)));  
					}else{  
						currSwfUrl = doMain;  
						currSwfUrl = currSwfUrl.substring(0,currSwfUrl.lastIndexOf("/"));  
					}  
				}else{  
					currSwfUrl = doMain;  
					currSwfUrl = currSwfUrl.substring(0,currSwfUrl.lastIndexOf("/"));  
				}  
				currSwfUrl += "/";
				return currSwfUrl;
			}
			
		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%">
		<mx:TabNavigator id="lowId" width="100%" height="100%" change="changeHandler(event)">
			<mx:Canvas width="100%" height="100%" label="方式制作图" id="canvas1" fontSize="13">
				<flex:Network width="100%" height="100%" id="circuit" keyboardRemoveEnabled="false" />
			</mx:Canvas>
			<mx:Canvas width="70%" id="channelbox1" label="方式基本信息" height="100%" 
					   backgroundColor="#EFF3FF" borderStyle="solid" borderThickness="1" borderSides="bottom,right">
				<mx:VBox width="100%" height="100%" verticalGap="0" paddingLeft="0" paddingRight="0" paddingBottom="0">
					<mx:HBox width="100%" height="100%" styleName="pagebg">
						<mx:VBox width="95%" height="100%" styleName="page" maxWidth="960">
							<mx:HBox width="100%" height="45" styleName="pagetitle" horizontalAlign="center" verticalAlign="middle">
								<mx:Label text="{circuitcode.text}"/>
							</mx:HBox>
							<mx:Text text="方式单名称" styleName="pagepart"/>
							<mx:HBox width="100%" height="35" styleName="sat" verticalAlign="middle">
								<mx:Text id="remark" styleName="blacknormal"/>
							</mx:HBox>
							<mx:Text text="详细信息&#xa;" styleName="pagepart"/>
							<mx:Grid styleName="gridout" width="100%" horizontalGap="0">
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label     text="方式单号:"  />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="circuitcode"  styleName="intable" />
									</mx:GridItem>
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label  text="使用单位:"/>
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="userCom"  styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label     text="申请单名称:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="TxtFSDcode" styleName="intable"/>
									</mx:GridItem>
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="申请单位:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="requestCom" styleName="intable"/>		
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label  text="执行单位:" />
									</mx:GridItem>
									<mx:GridItem width="80%"  height="30" styleName="griditem" colSpan="3">
										<mx:TextInput id="TxtImplementation_units" styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="业务类型:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="operationType" styleName="intable"/>
									</mx:GridItem>
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="业务分类:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="userName" styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="速率:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="rate" styleName="intable"/>
									</mx:GridItem>
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="业务等级:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="circuitLevel" styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="接口类型:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="interfaceType" styleName="intable"/>
									</mx:GridItem>
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="电路状态:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="state" styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="A局站:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="station1" styleName="intable"/>
									</mx:GridItem>
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="Z局站:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="station2" styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="A端设备:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="equipCode1" styleName="intable"/>
									</mx:GridItem>
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="Z端设备:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="equipCode2" styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="A端设备端口:" />
									</mx:GridItem>
									<mx:GridItem width="80%" height="30" styleName="griditem" colSpan="3">
										<mx:TextInput id="portserialno1"  styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="Z端设备端口:" />
									</mx:GridItem>
									<mx:GridItem width="80%"  height="30" styleName="griditem" colSpan="3">
										<mx:TextInput id="portserialno2" styleName="intable"/>
									</mx:GridItem>
									
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="制作人:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="leaser" styleName="intable"/>
									</mx:GridItem>
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="制作日期:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="createTime" styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="要求完成日期:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="requestFinish_time" styleName="intable"/>
									</mx:GridItem>
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="实际完成时间:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="useTime" styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="审核人:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="check_personOfRequestFinish" styleName="intable"/>
									</mx:GridItem>
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="校核人:" />
									</mx:GridItem>
									<mx:GridItem width="100%" height="30" styleName="griditem">
										<mx:TextInput id="k" styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="批准人:" />
									</mx:GridItem>
									<mx:GridItem  width="80%" height="30" styleName="griditem" colSpan="3">
										<mx:TextInput id="response_person" styleName="intable"/>
									</mx:GridItem>
									
								</mx:GridRow>
								<mx:GridRow width="100%" height="100%">
									<mx:GridItem width="160" height="30" styleName="griditemlabel">
										<mx:Label text="备注:"  />
									</mx:GridItem>
									<mx:GridItem width="80%" height="30" styleName="griditem" colSpan="3">
										<mx:TextInput id="requiSitionId" styleName="intable"/>
									</mx:GridItem>
								</mx:GridRow>
							</mx:Grid>
						</mx:VBox>
					</mx:HBox>
				</mx:VBox>
			</mx:Canvas>
			<!--
			<mx:VBox width="100%" height="100%" id="canvas2" label="电路路由图" fontSize="13" visible="false"  includeInLayout="false" >
				<mx:HBox id="toolbar1" width="100%" horizontalGap="0"/>
				<flex:Network x="0" y="0" width="100%" height="100%" id="channelPic" keyboardRemoveEnabled="false">
				</flex:Network>
			</mx:VBox>
			-->
		</mx:TabNavigator>
		<mx:Canvas width="100%" height="27" styleName="myCanvas">
			<mx:LinkButton label="导出Excel" left="10" bottom="0" width="104" icon="@Embed('assets/images/btn/fanshi_excel.png')" click="Excel_clickHandler(event)"/>
		</mx:Canvas>
	</mx:VBox>
</mx:TitleWindow>