<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"  
				fontSize="12" xmlns:controls="ht.*"  
				    showCloseButton="true" close="close()" title="时隙" label="时隙选择树" creationComplete="init();initEvent();" width="400" height="400"  layout="horizontal" xmlns:demo="demo.*" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:servasoftware="http://www.servasoftware.com/2009/twaver/flex" xmlns:common="demo.common.*" xmlns:local="*" xmlns:code="http://code.google.com/p/flexlib/">
	<mx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			
			import common.actionscript.ModelLocator;
			import common.other.events.CustomEvent;
			import common.other.events.EventNames;
			
			import flexunit.utils.ArrayList;
			
			import mx.collections.*;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.CheckBox;
			import mx.controls.Tree;
			import mx.core.DragSource;
			import mx.events.CloseEvent;
			import mx.events.DragEvent;
			import mx.events.IndexChangedEvent;
			import mx.events.ItemClickEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.messaging.events.ChannelEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			

			
			import sourceCode.channelRoute.model.Circuit;
			import sourceCode.packGraph.views.checkedEquipPack;
			
			import twaver.*;
			import twaver.ElementBox;
			import twaver.core.util.l.l;
			import twaver.network.Network;
			public var rate:String;
		    private var XMLData:XMLList=new XMLList('<folder state="0" label="选择时隙" id="root" isBranch="true" disabled="true" leaf="false" tree="root" ></folder>');
			private var selectedNode:XML; 
			private var curIndex:int;
			private var catalogsid:String;
			private var type:String;
			private var labeltext:String;
			private var tree_node:String;
			public var parent_page:Object;
			public var e_link:Link;
			public var linerate:String;
			public var flag:String;
			public var e_node:Node;
			private function init():void
			{
			
				//slottreeRemote.getSlot(port_a,port_z,rate,"root");
			
				
			}
			private function close():void  
			{  
				PopUpManager.removePopUp(this);  
			}
			private function resultHandler(event:ResultEvent):void {
				XMLData = new XMLList(event.result.toString());
				stree.dataProvider = XMLData;
			}
			
			// 错误处理
			public function DealFault(event:FaultEvent):void {
				Alert.show(event.fault.toString());
				trace(event.fault);
			}
			private function tree_itemClick(evt:ListEvent):void {
				
				var item:Object = Tree(evt.currentTarget).selectedItem;
				if (stree.dataDescriptor.isBranch(item)) {
					
					stree.expandItem(item, !stree.isItemOpen(item), true);
				}
				
			}
			private function treeChange():void{ 		
				
				
				stree.selectedIndex = curIndex;
				selectedNode = stree.selectedItem as XML;
				//if(selectNode.)
				if(selectedNode.@leaf==false&&(selectedNode.children()==null||selectedNode.children().length()==0))
				{
					catalogsid = selectedNode.attribute("id"); 
					type=selectedNode.attribute("tree");
					labeltext=selectedNode.attribute("label");
					dispatchEvent(new Event(EventNames.CATALOGROW));
					//CustomEvent.dispatcher.dispatchEvent(new CustomEvent(EventNames.CATALOGROW,catalogsid,type,labeltext));
				}
				
			}
			private function initEvent():void{  
				addEventListener(EventNames.CATALOGROW,gettree);
				//CustomEvent.dispatcher.addEventListener(EventNames.CATALOGROW,function(e:CustomEvent):void{gettree(e,type,labeltext)}); 
			}	
			private function gettree(e:Event):void{  
				
				var stTreeRO:RemoteObject = new RemoteObject("businessDispatch");
				stTreeRO.endpoint = ModelLocator.END_POINT;
				stTreeRO.showBusyCursor =true;
				stTreeRO.getVirtualSlot(rate,catalogsid,linerate,type);
				stTreeRO.addEventListener(ResultEvent.RESULT,getNextTreeNode);
				stTreeRO.addEventListener(FaultEvent.FAULT,DealFault);
			}  
			private function getNextTreeNode(e:ResultEvent){
				var str:String = e.result as String;  
				
				if(str!=null&&str!="")
				{  
					var child:XMLList= new XMLList(str);
					if(selectedNode.children()==null||selectedNode.children().length()==0)
					{ 									 
						selectedNode.appendChild(child);
						
						stree.callLater(openTreeNode,[selectedNode]);
						
					}
					
				}
				addEventListener(EventNames.CATALOGROW,gettree);
			}
			private function openTreeNode(xml:XML):void{
				if(stree.isItemOpen(xml))
					stree.expandItem(xml,false);
				stree.expandItem(xml,true);
			}
			private function selectPort(e:Event){
				
				var node:XML = stree.selectedItem as XML;
				if(node.@leaf=='true'){
				
				if(flag=='virtualtopo'){
				 
				 var page:virtualtopo = parent_page as virtualtopo;
				 page.timeSlot.text = node.@label;
				 e_link.setClient("tsrate",node.@tsrate);
				 e_link.setClient("timeslot",node.@timeslot);
				} 
				if(flag=='systemjump'){
					var page_system:systemjump= parent_page as systemjump;		
					page_system.timeSlot.text = node.@label;
					e_link.setClient("tsrate",node.@tsrate);
					e_link.setClient("timeslot",node.@timeslot);
				}
				if(flag =='topolink'){
				   
					var page_topo:addtopolink = parent_page as addtopolink;
					page_topo.timeSlot.text = node.@label;
					e_link.setClient("tsrate",node.@tsrate);
					e_link.setClient("timeslot",node.@timeslot);
				}
				if(flag =='virtualport'){
				//该处时隙不需要
				   /* var page_virtualport:virtualport = parent_page as virtualport;
				   e_node.setClient("tsrate",node.@tsrate);
				   e_node.setClient("timeslot",node.@timeslot);
				   page_virtualport.portSlot.text = node.@label; */
				}
				if(flag=='virtualtopoforVES'){
					  var page_VES:VirtualEquipmentSlot = parent_page as VirtualEquipmentSlot;
					  page_VES.timeSlot.text = node.@label;
					  e_link.setClient("tsrate",node.@tsrate);
					  e_link.setClient("timeslot",node.@timeslot);
				}
				this.close();
				}
			}
		]]>
	</mx:Script>
	<mx:RemoteObject id="slottreeRemote" destination="businessDispatch" showBusyCursor="true" endpoint="{ModelLocator.END_POINT}" fault="DealFault(event)" result="resultHandler(event)">
	</mx:RemoteObject>
	<mx:VBox width="100%" height="100%" verticalGap="0" horizontalGap="0" >
			<mx:Tree id="stree" width="100%" height="100%" labelField="@label" 
					 dataProvider="{XMLData}" 
					 dragEnabled="true" 
					 doubleClickEnabled="true"
					 doubleClick="selectPort(event)"
					 change="treeChange()" 
					 itemClick="tree_itemClick(event)" 
					 itemOpen="treeChange()"
					 itemRollOver="curIndex = event.rowIndex"
					 >
			</mx:Tree>
	</mx:VBox>
	
	
</mx:TitleWindow>  