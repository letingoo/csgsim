<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" height="100%"
		 creationComplete="init()"
		 xmlns:views="sourceCode.tableResurces.views.*" 
		 xmlns:component="common.component.*"
		 verticalGap="0">
	<!--	<component:ControlBar width="100%" height="38" modelName="通道压力和安全预警分析" imgName="businessRess"  />-->
	<mx:HBox>
		<!--	<mx:Label text="所属系统" height="25"/>-->
		<mx:ComboBox id="com_sys" dataProvider="{arr_cb}"  change="com_rate_changeHandler(event)"/>
		<!--	<mx:Label text="电路带宽" height="25"/>-->
		<mx:ComboBox id="com_rate" dataProvider="{arr_cb1}"   change="com_rate_changeHandler1(event)" />
		<!--<mx:Label text="预警门限值" width="80" />-->
	<!--	<mx:ComboBox id="num"  dataProvider="{arr_cb2}"  change="com_rate_changeHandler2(event)" />-->
		<mx:Button id="MakePic" label="复用段压力分析"  click=" PaintPic(event)"/>
		<mx:Button id="shuaxin" label="刷新"  click="Shuaxin(event);"/>
		<!--<mx:Button id="shuaxinda" label="导出"  click="Shuaxinda(event);"/>-->
	</mx:HBox>	
	<mx:VBox id="graph_area" width="100%" height="100%"
			 paddingBottom="0" 
			 paddingLeft="0" paddingRight="0" paddingTop="0"  
			 verticalScrollPolicy="off" horizontalScrollPolicy="off">	
		<mx:HBox width="100%" height="100%" verticalAlign="top" >
			
			<mx:Panel title="复用段压力风险分布图" width="548" height="100%" fontSize="12">  	
	<!--			<mx:Legend width="523" direction="horizontal" horizontalGap="8"  height="28">-->
					<mx:HBox width="512">						
						<mx:Label   id="s1"  width="287"  height="20"/>
						<mx:LegendItem label="Ⅰ级" fontWeight="bold" >
							<mx:fill>
								<mx:SolidColor color="0xEE0000"/>
							</mx:fill>
						</mx:LegendItem>   
						<mx:LegendItem label="Ⅱ级" fontWeight="bold" >
							<mx:fill>
								<mx:SolidColor color="0xEE7600"/>
							</mx:fill>
						</mx:LegendItem>   
						<mx:LegendItem label="Ⅲ级" fontWeight="bold" >
							<mx:fill>
								<mx:SolidColor color="0xEEEE00"/>
							</mx:fill>
						</mx:LegendItem>   
						<mx:LegendItem label="Ⅳ级" fontWeight="bold" >
							<mx:fill>
								<mx:SolidColor color="0x71C671"/>
							</mx:fill>
						</mx:LegendItem>   
				<!--		<mx:LegendItem label="Ⅴ级" fontWeight="bold" >
							<mx:fill>
								<mx:SolidColor color="0xEEEE00"/>
							</mx:fill>
						</mx:LegendItem>   
						<mx:LegendItem label="Ⅵ级" fontWeight="bold" >
							<mx:fill>
								<mx:SolidColor color="0x71C671"/>
							</mx:fill>
						</mx:LegendItem>   -->
					</mx:HBox>
		<!--		</mx:Legend>-->
				<!--<mx:Legend dataProvider="{equipInfo}" height="317" width="0"/>  柱状图右上角显示的内容-->
				<mx:ColumnChart id="myChart"  dataProvider="{equipInfo}" showDataTips="true" width="100%" height="100%" itemRollOverColor="haloSilver"   itemClick="chartChange(event)">  
					<mx:horizontalAxis>  
						<mx:CategoryAxis displayName="风险等级" title="风险等级" dataProvider="{equipInfo}"  
										 categoryField="LEVEL"/>  
					</mx:horizontalAxis>  
					<mx:verticalAxis>  
						<!--设定左边Y轴坐标的数值范围 -->  
						<mx:LinearAxis title="复用段数量(单位:个)" 
									   displayName="复用段数量" 
									   autoAdjust="true" />  
						<!--		<mx:LinearAxis title="通道数量(单位:条)" 
						displayName="通道数量" 
						minimum="0"
						maximum="6"
						autoAdjust="true" />  -->
					</mx:verticalAxis>  
					<mx:series>  
						<mx:ColumnSeries id="cs1" dataProvider="{equipInfo}"  
										 xField="LEVEL" yField="SUM" 
										 fillFunction="myFillFunction"
										 displayName="坐标信息">
							<mx:fill>
								<mx:RadialGradient>
									<mx:entries>
										<mx:GradientEntry  color="#A1AECF"  />
										<mx:GradientEntry color="#87CEEB" ratio="0"/>
									</mx:entries>
								</mx:RadialGradient>
							</mx:fill>
						</mx:ColumnSeries>
					</mx:series>   			
				</mx:ColumnChart>  
				
			</mx:Panel>
			
			<mx:Panel title="复用段压力风险分布详细信息" width="100%" height="100%" fontSize="12" >  
				<mx:DataGrid   id="dgEquip"  width="100%" height="100%" visible="true" dataProvider="{equipInfojs}"  doubleClick="itemListClickHander(event)" doubleClickEnabled="true">
					<mx:columns>
					<mx:DataGridColumn headerText="序号" dataField="SerialNum" editable="false" labelFunction="lfRowNum" width="10" />
					<!--<mx:DataGridColumn headerText="复用段 id" dataField="label" width="30" wordWrap="true" editable="true"/>-->
						<mx:DataGridColumn headerText="复用段 " dataField="labelname" width="30" wordWrap="true" editable="true"/>
					<mx:DataGridColumn headerText="复用段速率 " dataField="rate" width="15"/>
				<mx:DataGridColumn headerText="承载业务个数" dataField="sum" width="15"/>
						<mx:DataGridColumn headerText="承载关键业务个数" dataField="major" width="15"/>
						<mx:DataGridColumn headerText="复用段压力指数" dataField="result" width="15"/>
					</mx:columns>
				</mx:DataGrid>
			</mx:Panel>
		</mx:HBox >
	</mx:VBox>
	
	<mx:Script>
		<![CDATA[
			import common.actionscript.ModelLocator;
			import common.actionscript.MyPopupManager;
			import common.component.PopupMenu;		
			import main;		
			import mx.charts.ChartItem;
			import mx.charts.events.ChartItemEvent;
			import mx.charts.series.items.ColumnSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.List;
			import mx.events.DropdownEvent;
			import mx.events.ListEvent;
			import mx.graphics.IFill;
			import mx.graphics.SolidColor;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			import com.as3xls.xls.ExcelFile;
			import com.as3xls.xls.Sheet;
			
			import sourceCode.resManager.resBusiness.actionscript.BusiToCircu;
			import sourceCode.sysGraph.views.SysOrgMapL1;
			import sourceCode.topolink.views.DetailTopo1;
			import sourceCode.topolink.views.InterposeSearchTitle;
			import sourceCode.topolink.views.InterposeSearchTitles;
			
			private var interpose:sourceCode.topolink.views.InterposeSearchTitle;
			private var interposes:sourceCode.topolink.views.InterposeSearchTitles;
			private var detailroute:sourceCode.topolink.views.DetailTopo1;
			public var sysOrgMap:SysOrgMapL1;		
			public var popMenu:PopupMenu = new PopupMenu();
			private var mi:main;
			
			[Bindable]
			private var arr_cb:ArrayCollection=new ArrayCollection([
				{label:'--所属系统--'},
				{label:'全网'}
			]);
			[Bindable]
			private var arr_cb1:ArrayCollection=new ArrayCollection([
				{label:'--风险等级--'},
				{label:'全部'},        //数据库中还没有设置通道速率这一角色
				{label:'Ⅰ级'},
				{label:'Ⅱ级'},
				{label:'Ⅲ级'},
				{label:'Ⅳ级'}]);
		/* 	[Bindable]
			private var arr_cb2:ArrayCollection=new ArrayCollection([
			{label:'--预警策略--'},
				{label:'输入预警阈值'},
				{label:'输入预警模型'}]);  */
			
			[Bindable]
			private var equipInfo:ArrayCollection = new ArrayCollection();	
			[Bindable]
			private var equipInfoj:ArrayCollection = new ArrayCollection();	
			[Bindable]
			private var equipInfojs:ArrayCollection = new ArrayCollection();	
			
			private var xt:String = "";
			private var dk:String= "";
			private var cl:String = "";
			private var b:int =0;
			var ss:int =0;
			
			public static var ses:String;
			protected function com_rate_changeHandler(event:ListEvent):void
			{   
				xt =  com_sys.selectedLabel.toString();
			} 
			
			protected function com_rate_changeHandler1(event:ListEvent):void
			{   
				dk =  com_rate.selectedLabel.toString();
			} 		

			
			public var modelName:String="复用段压力分析";
			public static var  chch:Boolean=false;
			private function chartChange(event:ChartItemEvent):void{
				chch=true;			
				mi=this.parentApplication as main;	
				sysOrgMap = new SysOrgMapL1();		
				mi.addPanel(modelName,sysOrgMap,0,0,popMenu.userIcon);	
			}

			
			/*  	public  function itemclick(event:DropdownEvent):void
			{  
			num.selectedIndex=0;
			}  */
			/* public  function itemclick(event:MouseEvent):void
			{  
			}   */
			
			// num.prompt="--请选择预警策略--";
			//num.initialize();
			//	num.selectedIndex=0;
			
			
			protected function Shuaxinda(event:MouseEvent):void
			{ 
				exportTo();
			}
			public function exportTo():void  
			{  
				///调用Util类的静态方法 
		
				exportToExcel(dgEquip);  
			}
			public static function exportToExcel(nodeDataGrid:DataGrid):void  
			{    

				var fields:Array = new Array();   
				/**生成表对象sheet**/  
				var sheet:Sheet= new Sheet();  
				
				var dataProviderCollection:ArrayCollection =nodeDataGrid.dataProvider as ArrayCollection;  
				/**获得表格的行数**/  
				var rowCount:int =  dataProviderCollection.length;  
				//Alert.show("fww"+rowCount.toString());
				/**设置表格的行数(rowCount+1)，列数（nodeDataGrid.columnCount）**/  
				sheet.resize(rowCount+1,nodeDataGrid.columnCount);  
				/**获得DateGrid列的内容**/  
				var columns:Array = nodeDataGrid.columns;   
				//Alert.show("fww"+columns.length);
				/**循环设置列名的值**/  
				var i:int = 0;   
				for each (var field:DataGridColumn in columns)  
				{   
					fields.push(field.dataField.toString());   
					/**第一行的值,取值为nodeDataGrid的headerText**/  
					sheet.setCell(0,i,field.headerText.toString());   
					i++;   
				}  
				/**循环设置行的值**/  
				for(var r:int=0;r<rowCount;r++)  
				{  
					/**获得dataProviderCollection的每行Item的对象**/  
					var record:Object =dataProviderCollection.getItemAt(r);  
					/**调用回调函数写入sheet**/  
					insertRecordInSheet(r+1,sheet,record);  
				}  
				
				/**生成Excel文件**/  
				var xls:ExcelFile = new ExcelFile();  
				/**将sheet写入Excel文件中**/  
				xls.sheets.addItem(sheet);  
				/**将xls对象转换为ByteArray流对象**/  
				var bytes: ByteArray = xls.saveToByteArray();  
				/**生成新文件域**/  
				var fr:FileReference = new FileReference();  
				/**将bytes流对象保存到文件域**/  
				fr.save(bytes,"SampleExport.xls");  
				
				/**回调函数**/  
				function insertRecordInSheet(row:int,sheet:Sheet,record:Object):void  
				{     
					var colCount:int = nodeDataGrid.columnCount;  
					for(var c:int=0; c < colCount; c++)   
					{   
						var i:int = 0;   
						for each(var field:String in fields)  
						{     
							for each (var value:String in record)  
							{   
								/**循环判断nodeDataGrid列名域值record[field]与value是否相等**/  
								if (record[field].toString() == value)   
									/**写入表格中**/      
									sheet.setCell(row,i,value);   
							}   
							i++;   
						}   
					}  
				}  
			} 
			protected function Shuaxin(event:MouseEvent):void
			{   
				com_sys.selectedIndex=0;
				com_rate.selectedIndex=0;
//				num.selectedIndex=0;
				equipInfo.removeAll();
				equipInfojs.removeAll();
				equipInfoj.removeAll();
			}  
			protected function PaintPic(event:MouseEvent):void
			{  
				ss = InterposeSearchTitle.mx//mxml传值需要定义成静态变量
				if(xt=='全网')
				{
					  	var ro:RemoteObject = new RemoteObject("topolink");
						ro.endpoint = ModelLocator.END_POINT;
						ro.showBusyCursor = true;
						ro.addEventListener(ResultEvent.RESULT,ResultGetDevInfo);
						ro.Fylevel1();					
				}

			
			} 
			
			/* 通道风险分析 */
			private function ResultGetDevInfo(event:ResultEvent):void
			{
				equipInfo=event.result as ArrayCollection;	
		 		if(equipInfo.length>0)
				{
				var roj:RemoteObject = new RemoteObject("topolink");
				roj.endpoint = ModelLocator.END_POINT;
				roj.showBusyCursor = true;
				roj.addEventListener(ResultEvent.RESULT,ResultGetDevInfojs);
				roj.detail1(com_rate.selectedIndex);
				} 
				
			}
			/* 高危通道风险分析 */
	/* 		private function ResultGetDevInfoj(event:ResultEvent):void
			{
				equipInfoj=event.result as ArrayCollection;	
				
			} */
			private function ResultGetDevInfojs(event:ResultEvent):void
			{
				equipInfojs=event.result as ArrayCollection;	
				
			}
			
			private function lfRowNum(oItem:Object,iCol:int):String    
			{   
				var iIndex:int = dgEquip.dataProvider.getItemIndex(oItem) + 1; 				
				return String(iIndex);     
			} 
			
			protected function itemListClickHander(event:MouseEvent):void
			{   
				ses=dgEquip.selectedItem.label.toString();		
				detailroute = new DetailTopo1();
				//interpose.title = "通道预警门限值";
				MyPopupManager.addPopUp(detailroute,true);
			}
			public function init():void
			{   
				
				
			}	
			
			private function myFillFunction(element:ChartItem, index:Number):IFill {
				//var c1:SolidColor = new SolidColor(0x8B008B);
				//var c2:SolidColor = new SolidColor(0xA020F0);
				var c3:SolidColor = new SolidColor(0xEE0000);
				var c4:SolidColor = new SolidColor(0xEE7600);
				var c5:SolidColor = new SolidColor(0xEEEE00);
				var c6:SolidColor = new SolidColor(0x71C671);
			  /*   #71C671   绿色  6级
				#EEEE00   黄色  5级
				#EE7600   橙色   4级
				#EE0000    红色   3级
				#A020F0    紫色   2级
				#8B008B    黑紫色   1级 */
				var item:ColumnSeriesItem = ColumnSeriesItem(element);
				//var profit:Number = Number(item.yValue);     
				var profit:String = String(item.xValue);   
				
				if (profit=="Ⅰ级") {
					return c3;
				} 
				if (profit=="Ⅱ级") {
					return c4;
				}
				if (profit=="Ⅲ级") {
					return c5;
				}
				if (profit=="Ⅳ级") {
					return c6;
				}
			/* 	if (profit=="Ⅴ级") {
					return c5;
				} */
			/* 	else {
					return c6;
				}  */
				return c6;
			}
		]]>
	</mx:Script>
</mx:VBox>
