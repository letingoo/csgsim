<panel:PanelWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:pgtb="common.component.*"
	xmlns:pgtb1="sourceCode.ocableResource.views.*"
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:servasoftware="http://www.servasoftware.com/2009/twaver/flex" 
	xmlns:views="sourceCode.ocableResource.views.*"
	creationComplete="titlewindow1_creationCompleteHandler(event)" 
	backgroundImage="@Embed(source='assets/images/popwindowbg.png')"
	backgroundSize="100%"
	windowContainer="{Application.application.windowContainer}"
	width="{parentApplication.workspace.width}"
	height="{parentApplication.workspace.height+70}"
	xmlns:panel="common.other.SuperPanelControl.nl.wv.extenders.panel.*">
	<mx:Script>
		<![CDATA[
			import common.actionscript.ModelLocator;
			import common.actionscript.MyPopupManager;
			import common.actionscript.Registry;
			import common.other.blogagic.util.mapNode;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			import mx.utils.StringUtil;
			
			import org.flexunit.runner.Result;
			
			import sourceCode.alarmmgr.model.AlarmMangerModel;
			import sourceCode.alarmmgr.model.AlarmResultModel;
			import sourceCode.ocableResource.model.FiberDetailsModel;
			import sourceCode.ocableResource.model.FiberDetailsResultModel;
			import sourceCode.ocableResource.model.FiberRouteDataModel;
			import sourceCode.ocableResource.model.OcableRoutInfoData;
			import sourceCode.ocableResource.model.ResultModel;
			import sourceCode.ocableResource.views.CarryBusiness;
			import sourceCode.ocableResource.views.FiberCarryBusiness;
			import sourceCode.ocableResource.views.OcableRoutInfo;
			import sourceCode.ocableResource.views.SysOrgMap;
			import sourceCode.ocableResource.views.businessInfluenced;
			import sourceCode.rootalarm.views.RootAlarmDetails;
			import sourceCode.sysGraph.views.CarryOpera;
			
			import twaver.DemoUtils;
			import twaver.SequenceItemRenderer;
			
			[Bindable] public var node:mapNode;
			
			[Embed(source="assets/images/mntsubject/bubble-chat.png")] 
			private var iconClass:Class;
			public var sectioncode:String;
			public var pageIndex:int=0;
			public var pageSize:int=50;
			public var circuiPageSize:int = 50;
			public 	var fdml:FiberDetailsModel = new FiberDetailsModel();
			public var titles:Array = new Array("告警级别","发生时间","告警来源","科目名称","告警对象","告警名称","所属厂家","所属系统","所属局站","所属区域","频闪次数","告警原因","运维单位","恢复时间","确认时间","确认人");
			private var indexRenderer:Class = SequenceItemRenderer;
			public var objModel:AlarmMangerModel=new AlarmMangerModel();
			private var param:ArrayCollection =new ArrayCollection();
			private var param1:ArrayCollection =new ArrayCollection();//跟告警
			private var count:int; 
			private var fiberxml:XML;
			private var fiberdata:ArrayCollection;
			private var tablename="v_alarminfonew";
			
			protected function closeHandler():void
			{
				// TODO Auto-generated method stub
				PopUpManager.removePopUp(this);
			}
			private function getBusiness(start:String,end:String):void{
				var rtCarry:RemoteObject = new RemoteObject("AlarmManagerComboboxDwr");
				rtCarry.addEventListener(ResultEvent.RESULT,getRootAlarmInfosHandler);
				rtCarry.endpoint = ModelLocator.END_POINT;
				rtCarry.showBusyCursor = true;
				objModel.isrootalarmzh="1";
				objModel.start=start;
				objModel.end = end;
				rtCarry.getAlarmInfoLst(objModel); 
			}
			
			private function getRootAlarmInfosHandler(event:ResultEvent):void{
				onCircuitResult(event);
			}
			
			private function onCircuitResult(event:ResultEvent):void{
				param1.removeAll();
				var alarmInfos:ArrayCollection=event.result.list as ArrayCollection;
				if(event.result.list==null || event.result.list==""){
					Alert.show("没有结果","提示信息",4,this,null,iconClass);
					
				}
				for each(var a:Object in alarmInfos){
					param1.addItem({alarmlevelname:a.ALARMLEVELNAME,alarmobjdesc:a.ALARMOBJDESC,alarmobject:a.ALARMOBJECT,firststarttime:a.FIRSTSTARTTIME,alarmType:a.ALARMTYPE,
						isackedzh:a.ISACKEDZH,laststarttime:df.format(a.LASTSTARTTIME),isrootalarmzh:a.ISROOTALARMZH,vendorzh:a.VENDORZH,vendor:a.VENDOR,
						alarmnumber:a.ALARMNUMBER,belongtransys:a.BELONGTRANSYS,belongequip:a.BELONGEQUIP,belongshelfcode:a.BELONGSHELFCODE,belongpackobject:a.BELONGPACKOBJECT,
						belongportobject:a.BELONGPORTOBJECT,alarmdesc:a.ALARMDESC,belongslot:a.BELONGSLOT,flashcount:a.FLASHCOUNT,interposename:a.INTERPOSENAME,
						belongportcode:a.BELONGPORTCODE,objclasszh:a.OBJCLASSZH,ackperson:a.ACKPERSON,acktime:df.format(a.ACKTIME),isworkcase:a.ISWORKCASE,
						unit:a.UNIT, isfilter:a.ISFILTER, belongstation:a.BELONGSTATION, isbugno:a.ISBUGNO,area:a.AREA,belongpack:a.BELONGPACK,dealresultzh:a.DEALRESULTZH,carrycircuit:a.CARRYCIRCUIT,dealperson:a.DEALPERSON,bugno:a.BUGNO,dealresult:a.DEALRESULT,ackcontent:a.ACKCONTENT,endtime:df.format(a.ENDTIME)});
				}
				dg.dataProvider=param1;
				serverPagingBar2.orgData =param1;
				count =int(event.result.alarmcount);
				serverPagingBar2.totalRecord = count;
				serverPagingBar2.dataBind(true);
			}
			
			private function returnCircuitALL(event:Event = null):void{
				getBusiness("0",serverPagingBar2.totalRecord.toString());
			}
			
			private function ExporCircuitExcel(event:Event = null):void{

				var fdml:AlarmMangerModel = new AlarmMangerModel(); 
				fdml.start = "0";
				fdml.end = serverPagingBar2.totalRecord.toString();
				fdml.isrootalarmzh = "1";
				fdml.alarmSearchFlag="1";
				fdml.tablename=tablename;
				var re:RemoteObject = new RemoteObject("AlarmManagerComboboxDwr"); 
				re.endpoint = ModelLocator.END_POINT;
				re.showBusyCursor = true;
				re.addEventListener(ResultEvent.RESULT,ExportExcelHandler);
				re.AlarmManageResExportEXCEL("根告警信息列表",titles,"根告警查询",fdml);
			}
			
			private function PagingFunctionCircuit(pageIndex:int,pageSize:int):void{
				this.circuiPageSize=pageSize;
				getBusiness((pageIndex*pageSize).toString(),(pageIndex*pageSize+pageSize).toString());
			}
			
			protected function titlewindow1_creationCompleteHandler(event:FlexEvent):void
			{
				
				objModel.start ="0";
				objModel.end = pageSize.toString();
				objModel.isrootalarmzh="0";
				var remoteObject:RemoteObject = new RemoteObject("AlarmManagerComboboxDwr");
				remoteObject.endpoint = ModelLocator.END_POINT;
				remoteObject.showBusyCursor = true;
				remoteObject.addEventListener(ResultEvent.RESULT,getAlarmInfoLstHandler);
				remoteObject.getAlarmInfoLst(objModel);//查找非根告警
				serverPagingBar1.addEventListener("returnALL",returnALL);
				serverPagingBar1.addEventListener("EXP",ExportExcel);
				serverPagingBar1.pagingFunction = PagingFunction;
				serverPagingBar1.dataGrid =fibergrid;
				
				
				//定制右键菜单
				var contextMenu:ContextMenu=new ContextMenu();
				fibergrid.contextMenu=contextMenu;
				fibergrid.contextMenu.addEventListener(ContextMenuEvent.MENU_SELECT,function(e:ContextMenuEvent):void{
					var getrootalarmdetail_itemMeau:ContextMenuItem = new ContextMenuItem("查看告警详情");
					getrootalarmdetail_itemMeau.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,getAlarmDetail);
					
					var fixAlarmMeau:ContextMenuItem =new ContextMenuItem("定位告警");
					fixAlarmMeau.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,getFixAlarm);
					
					var delAlarmMeau:ContextMenuItem =new ContextMenuItem("删除选中告警");
					delAlarmMeau.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,delFixAlarm);
					
					var carrycircuit:ContextMenuItem =new ContextMenuItem("查看承载业务");
					carrycircuit.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,getCarryCircuitLst);
					carrycircuit.visible=true;
					
					var flexVersion:ContextMenuItem=new ContextMenuItem(DemoUtils.FLEX_SDK_VERSION, false, false);
					var playerVersion:ContextMenuItem=new ContextMenuItem(DemoUtils.FLASH_PLAYER_VERSION, false, false);
					if(fibergrid.selectedItems.length==0){//选中元素个数
						fibergrid.contextMenu.hideBuiltInItems();
						fibergrid.contextMenu.customItems = [flexVersion,playerVersion];
					}
					else{
						fibergrid.contextMenu.hideBuiltInItems();
						fibergrid.contextMenu.customItems = [flexVersion,playerVersion];
						fibergrid.contextMenu.customItems = [getrootalarmdetail_itemMeau,carrycircuit,fixAlarmMeau,delAlarmMeau];
//						fibergrid.contextMenu.customItems = [item2,item4,item5];
					}
				});
				
				var circuitMenu:ContextMenu = new ContextMenu();
				dg.contextMenu = circuitMenu;
				dg.contextMenu.addEventListener(ContextMenuEvent.MENU_SELECT,function(event:ContextMenuEvent):void{
					var getrootalarmdetail_itemMeau:ContextMenuItem = new ContextMenuItem("查看告警详情");
					getrootalarmdetail_itemMeau.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,getRootAlarmDetail);
					
					var fixAlarmMeau:ContextMenuItem =new ContextMenuItem("定位告警");
					fixAlarmMeau.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,getFixAlarmRoot);
					
					var delAlarmMeau:ContextMenuItem =new ContextMenuItem("删除选中告警");
					delAlarmMeau.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,delFixAlarmRoot);
					
					var carrycircuit:ContextMenuItem =new ContextMenuItem("查看承载业务");
					carrycircuit.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT,getCarryCircuitLstRoot);
					carrycircuit.visible=true;
					
					var flexVersion:ContextMenuItem=new ContextMenuItem(DemoUtils.FLEX_SDK_VERSION, false, false);
					var playerVersion:ContextMenuItem=new ContextMenuItem(DemoUtils.FLASH_PLAYER_VERSION, false, false);
					
					if(dg.selectedItems.length == 0 ){
						dg.contextMenu.hideBuiltInItems();
						dg.contextMenu.customItems = [flexVersion,playerVersion];
					}else{
						dg.contextMenu.hideBuiltInItems();
						dg.contextMenu.customItems = [getrootalarmdetail_itemMeau,carrycircuit,fixAlarmMeau,delAlarmMeau];
					}
				
				});
				
			}

			//查询告警详细信息
			private function getAlarmDetail(event:ContextMenuEvent):void{
				if(fibergrid.selectedItem!=null && fibergrid.selectedItem != ""){
					var showDetail:RootAlarmDetails= new RootAlarmDetails();
					showDetail.obj = fibergrid.selectedItem;
					PopUpManager.addPopUp(showDetail,parent,true);
					PopUpManager.centerPopUp(showDetail);
				}else{
					Alert.show("请选择一条告警","提示");
				}
			}
			private function getRootAlarmDetail(event:ContextMenuEvent):void{
				if(dg.selectedItem!=null && dg.selectedItem != ""){
					var showDetail:RootAlarmDetails= new RootAlarmDetails();
					showDetail.obj = dg.selectedItem;
					PopUpManager.addPopUp(showDetail,parent,true);
					PopUpManager.centerPopUp(showDetail);
				}else{
					Alert.show("请选择一条告警","提示");
				}
			}
			//定位到告警
			private function getFixAlarm (event:ContextMenuEvent) :void{
				if(fibergrid.selectedItem!=null && fibergrid.selectedItem != ""){
					var alarmObj=fibergrid.selectedItem.objclasszh;
					if(alarmObj!=null && alarmObj!=""){
						if(alarmObj=="时隙" || alarmObj=="端口")
						{
							var strport:String=fibergrid.selectedItem.belongportobject;
							if(strport!=null && strport!=""){
								var strarray:Array=strport.split("=");
								strport="";
								for(var i:int=0;i<strarray.length;i++)
								{  
									if(i!=strarray.length-1)
										strport+=strarray[i]+",";
									else
										strport+=strarray[i];
								}
								//如果当前已打开，关闭再重开,并让告警呈现复选框选中
								var openFlag:Boolean = Application.application.isOpen("机盘管理视图");
								if(!openFlag){
									//已打开
									Application.application.closeModel("机盘管理视图");
								}
								Registry.register("packcode", strport);
								Registry.register("portcode", fibergrid.selectedItem.belongportcode);
								Application.application.openModel("机盘管理视图", false);
							}
						}	else if(alarmObj=="机盘"){
							
							var strport:String=fibergrid.selectedItem.belongpackobject;
							if(strport!=null && strport!=""){
								var strarray:Array=strport.split("=");
								strport="";
								for(var i:int=0;i<strarray.length;i++)
								{  
									if(i!=strarray.length-1)
										strport+=strarray[i]+",";
									else
										strport+=strarray[i];
								}
							}
							var rt:RemoteObject=new RemoteObject("devicePanel");
							rt.endpoint = ModelLocator.END_POINT;
							rt.showBusyCursor = true;
							rt.addEventListener(ResultEvent.RESULT,function(e:ResultEvent):void{
								var slotdirc:String="0";
								if("success"==e.result.toString()){
									slotdirc = "1";//表示反面
								}
								//如果当前已打开，关闭再重开,并让告警呈现复选框选中
								var openFlag:Boolean = Application.application.isOpen("设备面板图");
								if(!openFlag){
									//已打开
									Application.application.closeModel("设备面板图");
								}
								Registry.register("packcode", strport);
								Registry.register("systemcode", fibergrid.selectedItem.belongtransys);
								Registry.register("equipcode", fibergrid.selectedItem.belongequip);
								Registry.register("slotdir", slotdirc);
								Application.application.openModel("设备面板图", false);
							} );
							rt.getSlotDirectionByIds(strport);//查询时正面还是反面
							
						}else if(alarmObj=="设备"){
							//如果当前已打开，关闭再重开,并让告警呈现复选框选中  改为仿真拓扑图
							var openFlag:Boolean = Application.application.isOpen("网络拓扑图");
							if(!openFlag){
								//已打开
								Application.application.closeModel("网络拓扑图");
							}
							Registry.register("systemcode",fibergrid.selectedItem.belongtransys);
							Registry.register("equipcode",fibergrid.selectedItem.belongequip);
							Application.application.showSysGraphAlarm=true;
							Application.application.openModel("网络拓扑图", false);
							//				    Application.application.sysOrgMap.setAlarmShow();
						}else{
							Alert.show("无法定位该告警，请确定该告警类型","提示信息",4,null,null,iconClass);
						}
						
					}else{
						Alert.show("无法定位该告警，请确定该告警类型","提示信息",4,null,null,iconClass);
					}
				}
				else{
					Alert.show("请选择一条告警","提示");
				}
			}
			private function getFixAlarmRoot (event:ContextMenuEvent) :void{
				if(dg.selectedItem!=null && dg.selectedItem != ""){
					var alarmObj=dg.selectedItem.objclasszh;
					if(alarmObj!=null && alarmObj!=""){
						if(alarmObj=="时隙" || alarmObj=="端口")
						{
							var strport:String=dg.selectedItem.belongportobject;
							if(strport!=null && strport!=""){
								var strarray:Array=strport.split("=");
								strport="";
								for(var i:int=0;i<strarray.length;i++)
								{  
									if(i!=strarray.length-1)
										strport+=strarray[i]+",";
									else
										strport+=strarray[i];
								}
								//如果当前已打开，关闭再重开,并让告警呈现复选框选中
								var openFlag:Boolean = Application.application.isOpen("机盘管理视图");
								if(!openFlag){
									//已打开
									Application.application.closeModel("机盘管理视图");
								}
								Registry.register("packcode", strport);
								Registry.register("portcode", dg.selectedItem.belongportcode);
								Application.application.openModel("机盘管理视图", false);
							}
						}	else if(alarmObj=="机盘"){
							
							var strport:String=dg.selectedItem.belongpackobject;
							if(strport!=null && strport!=""){
								var strarray:Array=strport.split("=");
								strport="";
								for(var i:int=0;i<strarray.length;i++)
								{  
									if(i!=strarray.length-1)
										strport+=strarray[i]+",";
									else
										strport+=strarray[i];
								}
							}
							var rt:RemoteObject=new RemoteObject("devicePanel");
							rt.endpoint = ModelLocator.END_POINT;
							rt.showBusyCursor = true;
							rt.addEventListener(ResultEvent.RESULT,function(e:ResultEvent):void{
								var slotdirc:String="0";
								if("success"==e.result.toString()){
									slotdirc = "1";//表示反面
								}
								//如果当前已打开，关闭再重开,并让告警呈现复选框选中
								var openFlag:Boolean = Application.application.isOpen("设备面板图");
								if(!openFlag){
									//已打开
									Application.application.closeModel("设备面板图");
								}
								Registry.register("packcode", strport);
								Registry.register("systemcode", dg.selectedItem.belongtransys);
								Registry.register("equipcode", dg.selectedItem.belongequip);
								Registry.register("slotdir", slotdirc);
								Application.application.openModel("设备面板图", false);
							} );
							rt.getSlotDirectionByIds(strport);//查询时正面还是反面
							
						}else if(alarmObj=="设备"){
							//如果当前已打开，关闭再重开,并让告警呈现复选框选中  改为仿真拓扑图
							var openFlag:Boolean = Application.application.isOpen("网络拓扑图");
							if(!openFlag){
								//已打开
								Application.application.closeModel("网络拓扑图");
							}
							Registry.register("systemcode",dg.selectedItem.belongtransys);
							Registry.register("equipcode",dg.selectedItem.belongequip);
							Application.application.showSysGraphAlarm=true;
							Application.application.openModel("网络拓扑图", false);
							//				    Application.application.sysOrgMap.setAlarmShow();
						}else{
							Alert.show("无法定位该告警，请确定该告警类型","提示信息",4,null,null,iconClass);
						}
						
					}else{
						Alert.show("无法定位该告警，请确定该告警类型","提示信息",4,null,null,iconClass);
					}
				}
				else{
					Alert.show("请选择一条告警","提示");
				}
			}
			
			//删除告警
			private function delFixAlarm(event:ContextMenuEvent):void{
				if(fibergrid.selectedItem!=null && fibergrid.selectedItem != ""){
					var alarmNum = fibergrid.selectedItem.alarmnumber;
					var rtobj:RemoteObject=new RemoteObject("AlarmManagerComboboxDwr");
					rtobj.endpoint= ModelLocator.END_POINT;
					rtobj.showBusyCursor=true;
					rtobj.delAlarmInfos(alarmNum);        //表格加载数据
					rtobj.addEventListener(ResultEvent.RESULT,delAllAlarmInfoHandler);
				}else{
					Alert.show("请选择一条告警","提示");
				}
			}
			private function delFixAlarmRoot(event:ContextMenuEvent):void{
				if(dg.selectedItem!=null && dg.selectedItem != ""){
					var alarmNum = dg.selectedItem.alarmnumber;
					var rtobj:RemoteObject=new RemoteObject("AlarmManagerComboboxDwr");
					rtobj.endpoint= ModelLocator.END_POINT;
					rtobj.showBusyCursor=true;
					rtobj.delAlarmInfos(alarmNum);        //表格加载数据
					rtobj.addEventListener(ResultEvent.RESULT,delAllAlarmRootInfoHandler);
				}else{
					Alert.show("请选择一条告警","提示");
				}
			}
			private function delAllAlarmRootInfoHandler(event:ResultEvent):void{
				if("SUCCESS"==event.result.toString()){
					getBusiness("0",pageSize.toString());
				}
			}
			private function delAllAlarmInfoHandler(event:ResultEvent):void{
				if("SUCCESS"==event.result.toString()){
					objModel.start ="0";
					objModel.end = pageSize.toString();
					objModel.isrootalarmzh="0";
					var remoteObject:RemoteObject = new RemoteObject("AlarmManagerComboboxDwr");
					remoteObject.endpoint = ModelLocator.END_POINT;
					remoteObject.showBusyCursor = true;
					remoteObject.addEventListener(ResultEvent.RESULT,onResult);
					remoteObject.getAlarmInfoLst(objModel);//查找非根告警
				}
			}
			
			//查询承载业务列表
			private function getCarryCircuitLst(event:ContextMenuEvent):void{
				if(fibergrid.selectedItem!=null && fibergrid.selectedItem != ""){
					var alarmObj=fibergrid.selectedItem.objclasszh;
					var type:String="";
					var code:String="";
					if(alarmObj!=null && alarmObj!=""){
						if(alarmObj=="端口"){
							//
							type="logicport";
							code=fibergrid.selectedItem.belongportcode;
						}else if(alarmObj=="设备"){
							//
							type="equipment";
							code=fibergrid.selectedItem.belongequip;
						}else if(alarmObj=="机盘"){
							type="equippack";
							var strport:String=fibergrid.selectedItem.belongpackobject;
							if(strport!=null && strport!=""){
								var strarray:Array=strport.split("=");
								strport="";
								for(var i:int=0;i<strarray.length;i++)
								{  
									if(i!=strarray.length-1)
										strport+=strarray[i]+",";
									else
										strport+=strarray[i];
								}
							}
							code=strport;
						}else if(alarmObj=="时隙"){
							var strslot:String = fibergrid.selectedItem.alarmobject;
							if(strslot!=""&&strslot!=null){
								var strarray:Array=strslot.split("=");
								if(strarray.length==7){
									code=fibergrid.selectedItem.belongportcode+","+strarray[5];
									type="timeslot";
								}
							}
						}
						
						var carryOpera:CarryOpera=new CarryOpera();
						carryOpera.title="设备承载业务";
						carryOpera.getOperaByCodeAndType(code,type);
						MyPopupManager.addPopUp(carryOpera);
					}else{
						Alert.show("当前无法查看承载业务","提示");
					}
				}else{
					Alert.show("请选择一条告警","提示");
				}
			}
			private function getCarryCircuitLstRoot(event:ContextMenuEvent):void{
				if(dg.selectedItem!=null && dg.selectedItem != ""){
					var alarmObj=dg.selectedItem.objclasszh;
					var type:String="";
					var code:String="";
					if(alarmObj!=null && alarmObj!=""){
						if(alarmObj=="端口"){
							//
							type="logicport";
							code=dg.selectedItem.belongportcode;
						}else if(alarmObj=="设备"){
							//
							type="equipment";
							code=dg.selectedItem.belongequip;
						}else if(alarmObj=="机盘"){
							type="equippack";
							var strport:String=dg.selectedItem.belongpackobject;
							if(strport!=null && strport!=""){
								var strarray:Array=strport.split("=");
								strport="";
								for(var i:int=0;i<strarray.length;i++)
								{  
									if(i!=strarray.length-1)
										strport+=strarray[i]+",";
									else
										strport+=strarray[i];
								}
							}
							code=strport;
						}else if(alarmObj=="时隙"){
							var strslot:String = dg.selectedItem.alarmobject;
							if(strslot!=""&&strslot!=null){
								var strarray:Array=strslot.split("=");
								if(strarray.length==7){
									code=dg.selectedItem.belongportcode+","+strarray[5];
									type="timeslot";
								}
							}
						}
						
						var carryOpera:CarryOpera=new CarryOpera();
						carryOpera.title="设备承载业务";
						carryOpera.getOperaByCodeAndType(code,type);
						MyPopupManager.addPopUp(carryOpera);
					}else{
						Alert.show("当前无法查看承载业务","提示");
					}
				}else{
					Alert.show("请选择一条告警","提示");
				}
			}
			
			private function getAlarmInfoLstHandler(event:ResultEvent):void{
				this.onResult(event);
				serverPagingBar2.addEventListener("returnALL",returnCircuitALL);
				serverPagingBar2.addEventListener("EXP",ExporCircuitExcel);
				serverPagingBar2.pagingFunction = PagingFunctionCircuit;
				serverPagingBar2.dataGrid =dg;
				getBusiness("0",circuiPageSize.toString());//获取根告警
			}
			
			
			public function onResult(event:ResultEvent):void 
			{	
				param.removeAll();
				var alarmInfos:ArrayCollection=event.result.list as ArrayCollection;
				if(event.result.list==null || event.result.list==""){
					Alert.show("没有结果","提示信息",4,this,null,iconClass);
					
				}
				for each(var a:Object in alarmInfos){
					param.addItem({alarmlevelname:a.ALARMLEVELNAME,alarmobjdesc:a.ALARMOBJDESC,alarmobject:a.ALARMOBJECT,firststarttime:a.FIRSTSTARTTIME,alarmType:a.ALARMTYPE,
						isackedzh:a.ISACKEDZH,laststarttime:df.format(a.LASTSTARTTIME),isrootalarmzh:a.ISROOTALARMZH,vendorzh:a.VENDORZH,vendor:a.VENDOR,
						alarmnumber:a.ALARMNUMBER,belongtransys:a.BELONGTRANSYS,belongequip:a.BELONGEQUIP,belongshelfcode:a.BELONGSHELFCODE,belongpackobject:a.BELONGPACKOBJECT,
						belongportobject:a.BELONGPORTOBJECT,alarmdesc:a.ALARMDESC,belongslot:a.BELONGSLOT,flashcount:a.FLASHCOUNT,interposename:a.INTERPOSENAME,
						belongportcode:a.BELONGPORTCODE,objclasszh:a.OBJCLASSZH,ackperson:a.ACKPERSON,acktime:df.format(a.ACKTIME),isworkcase:a.ISWORKCASE,
						unit:a.UNIT, isfilter:a.ISFILTER, belongstation:a.BELONGSTATION, isbugno:a.ISBUGNO,area:a.AREA,belongpack:a.BELONGPACK,dealresultzh:a.DEALRESULTZH,carrycircuit:a.CARRYCIRCUIT,dealperson:a.DEALPERSON,bugno:a.BUGNO,dealresult:a.DEALRESULT,ackcontent:a.ACKCONTENT,endtime:df.format(a.ENDTIME)});
				}
				fibergrid.dataProvider=param;
				serverPagingBar1.orgData =param;
				count =int(event.result.alarmcount);
				serverPagingBar1.totalRecord = count;
				serverPagingBar1.dataBind(true);
				
			}
			
			public function PagingFunction(pageIndex:int,pageSize:int):void
			{
				this.pageSize=pageSize;
				objModel.isrootalarmzh="0";
				objModel.start=(pageIndex*pageSize).toString();
				objModel.end =(pageIndex*pageSize+pageSize).toString();
				var remoteobj:RemoteObject = new RemoteObject("AlarmManagerComboboxDwr"); 
				remoteobj.endpoint = ModelLocator.END_POINT;
				remoteobj.showBusyCursor = true;
				remoteobj.addEventListener(ResultEvent.RESULT,dataHandler);
				remoteobj.getAlarmInfoLst(objModel); 
				
			}
			
			public function dataHandler(event:ResultEvent):void{
				this.onResult(event);
			}
			
			public function returnALL(event:Event = null):void
			{
				objModel.start ="0";
				objModel.end = serverPagingBar1.totalRecord.toString();
				objModel.isrootalarmzh="0";
				var remoteObject:RemoteObject = new RemoteObject("AlarmManagerComboboxDwr");
				remoteObject.endpoint = ModelLocator.END_POINT;
				remoteObject.showBusyCursor = true;
				remoteObject.addEventListener(ResultEvent.RESULT,onResult);
				remoteObject.getAlarmInfoLst(objModel);//查找非根告警
			}
			
			public function ExportExcel(event:Event = null):void{
//				Export非根告警
				var fdml:AlarmMangerModel = new AlarmMangerModel(); 
				fdml.start = "0";
				fdml.end = serverPagingBar1.totalRecord.toString();
				fdml.isrootalarmzh = "0";
				fdml.alarmSearchFlag="1";
				fdml.tablename=tablename;
				var re:RemoteObject = new RemoteObject("AlarmManagerComboboxDwr"); 
				re.endpoint = ModelLocator.END_POINT;
				re.showBusyCursor = true;
				re.addEventListener(ResultEvent.RESULT,ExportExcelHandler);
				re.AlarmManageResExportEXCEL("非根告警信息列表",titles,"非根告警查询",fdml); 
			}
			
			public function ExportExcelHandler(event:ResultEvent):void{
				var path:String = event.result.toString();
				var request:URLRequest = new URLRequest(encodeURI(StringUtil.trim(path))); 
				navigateToURL(request,"_blank");
				
			}


		]]>
	</mx:Script>
	<mx:DateFormatter id="df" formatString="YYYY-MM-DD JJ:NN:SS"/>
	<mx:VBox width="100%" height="50%">
		<mx:Label text="非根告警列表"/>
		<mx:HBox width="100%" height="95%" >
		<mx:DataGrid id="fibergrid"  width="100%" height="100%" wordWrap="true" variableRowHeight="true" horizontalScrollPolicy="on" sortableColumns="false">
			<mx:columns>
				<mx:DataGridColumn headerText="序号" itemRenderer="{new ClassFactory(indexRenderer)}" width="50" textAlign="center"/>
				<mx:DataGridColumn headerText="告警编号" dataField="alarmnumber" width="50" textAlign="left" visible="false" />
				<mx:DataGridColumn headerText="告警级别" dataField="alarmlevelname" width="80" textAlign="left" itemRenderer="sourceCode.alarmmgr.actionscript.AlarmlevelcolorItemRender"/>
				<mx:DataGridColumn headerText="发生时间" dataField="firststarttime" width="150" textAlign="left"/>
				<mx:DataGridColumn headerText="告警来源" dataField="alarmType" width="80" textAlign="left"/>
				<mx:DataGridColumn headerText="科目名称" dataField="interposename" width="200" textAlign="left" visible="false"/>
				<mx:DataGridColumn headerText="告警对象" dataField="alarmobjdesc" width="200" textAlign="left"/>	
				<mx:DataGridColumn headerText="告警名称" dataField="alarmdesc" width="140" textAlign="left"/>
				<mx:DataGridColumn headerText="所属厂家" dataField="vendorzh" width="100" textAlign="left"/>
				<mx:DataGridColumn headerText="所属系统" dataField="belongtransys" width="100" textAlign="left"/>
				<mx:DataGridColumn headerText="所属局站" dataField="belongstation" width="150" textAlign="left"/>
				<mx:DataGridColumn headerText="所属区域" dataField="area" width="100" textAlign="left"/>
				<mx:DataGridColumn headerText="频闪次数" dataField="flashcount" width="100" textAlign="left"/>
				<mx:DataGridColumn headerText="告警原因" dataField="isworkcase" width="200" textAlign="left"/>	
				<mx:DataGridColumn headerText="故障单号" dataField="isbugno" width="100" textAlign="left" visible="false"/>
				<mx:DataGridColumn headerText="运维单位" dataField="unit" width="100" textAlign="left"/>
				
				<mx:DataGridColumn headerText="是否恢复" dataField="isfilter" width="100" textAlign="left"/><!--仿真告警 恢复-->
				<mx:DataGridColumn headerText="恢复时间" dataField="endtime" width="150" textAlign="left"/>
			</mx:columns>
		</mx:DataGrid>
		</mx:HBox>
		<pgtb1:pagetoolbarmapinfo x="1" id="serverPagingBar1" width="100%"  pageSize="50" height="5%"/>
	</mx:VBox>
	<mx:VBox width="100%" height="50%">
		<mx:Label text="根告警列表"/>
		<mx:HBox width="100%" height="95%">
			<mx:DataGrid id="dg" width="100%" height="100%" wordWrap="true"  variableRowHeight="true" horizontalScrollPolicy="on" sortableColumns="false">
				<mx:columns>
					<mx:DataGridColumn headerText="序号" itemRenderer="{new ClassFactory(indexRenderer)}" width="50" textAlign="center"/>
					<mx:DataGridColumn headerText="告警编号" dataField="alarmnumber" width="50" textAlign="left" visible="false" />
					<mx:DataGridColumn headerText="告警级别" dataField="alarmlevelname" width="80" textAlign="left" itemRenderer="sourceCode.alarmmgr.actionscript.AlarmlevelcolorItemRender"/>
					<mx:DataGridColumn headerText="发生时间" dataField="firststarttime" width="150" textAlign="left"/>
					<mx:DataGridColumn headerText="告警来源" dataField="alarmType" width="80" textAlign="left"/>
					<mx:DataGridColumn headerText="科目名称" dataField="interposename" width="200" textAlign="left" visible="false"/>
					<mx:DataGridColumn headerText="告警对象" dataField="alarmobjdesc" width="200" textAlign="left"/>	
					<mx:DataGridColumn headerText="告警名称" dataField="alarmdesc" width="140" textAlign="left"/>
					<mx:DataGridColumn headerText="所属厂家" dataField="vendorzh" width="100" textAlign="left"/>
					<mx:DataGridColumn headerText="所属系统" dataField="belongtransys" width="100" textAlign="left"/>
					<mx:DataGridColumn headerText="所属局站" dataField="belongstation" width="150" textAlign="left"/>
					<mx:DataGridColumn headerText="所属区域" dataField="area" width="100" textAlign="left"/>
					<mx:DataGridColumn headerText="频闪次数" dataField="flashcount" width="100" textAlign="left"/>
					<mx:DataGridColumn headerText="告警原因" dataField="isworkcase" width="200" textAlign="left"/>	
					<mx:DataGridColumn headerText="故障单号" dataField="isbugno" width="100" textAlign="left" visible="false"/>
					<mx:DataGridColumn headerText="运维单位" dataField="unit" width="100" textAlign="left"/>
					
					<mx:DataGridColumn headerText="是否恢复" dataField="isfilter" width="100" textAlign="left"/><!--仿真告警 恢复-->
					<mx:DataGridColumn headerText="恢复时间" dataField="endtime" width="150" textAlign="left"/>
				</mx:columns>
			</mx:DataGrid>
		</mx:HBox>
		<pgtb1:pagetoolbarmapinfo x="1" id="serverPagingBar2" width="100%" pageSize="50" height="5%"/>
	</mx:VBox>
</panel:PanelWindow>
