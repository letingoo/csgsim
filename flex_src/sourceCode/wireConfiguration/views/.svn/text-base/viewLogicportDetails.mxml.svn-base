<panel:PanelWindow xmlns:mx="http://www.adobe.com/2006/mxml" 
				   xmlns:pgtb="common.component.*"
				   width="1024" height="610" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:servasoftware="http://www.servasoftware.com/2009/twaver/flex" 
				   xmlns:views="sourceCode.ocableResource.views.*"
				   creationComplete="titlewindow1_creationCompleteHandler(event)" 
				   backgroundImage="@Embed(source='assets/images/popwindowbg.png')"
				   backgroundSize="100%"
				   windowContainer="{Application.application.windowContainer}"
				   xmlns:panel="common.other.SuperPanelControl.nl.wv.extenders.panel.*">
	
	<mx:Script>
		<![CDATA[
			import common.actionscript.ModelLocator;
			import common.actionscript.MyPopupManager;
			import common.actionscript.Registry;
			import common.other.blogagic.util.mapNode;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.ItemClickEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.mxml.RemoteObject;
			import mx.utils.StringUtil;
			
			import org.flexunit.runner.Result;
			
			import sourceCode.ocableResource.model.FiberDetailsModel;
			import sourceCode.ocableResource.model.FiberDetailsResultModel;
			import sourceCode.ocableResource.model.FiberRouteDataModel;
			import sourceCode.ocableTopo.views.CarryBusiness;
			import sourceCode.ocableTopo.views.businessInfluenced;
			import sourceCode.sysGraph.model.OcableRoutInfoData;
			import sourceCode.sysGraph.views.OcableRoutInfo;
			import sourceCode.sysGraph.views.SysOrgMap;
			import sourceCode.wireConfiguration.model.EquipLogicportDetails;
			import sourceCode.wireConfiguration.model.ResultModel;
			
			import twaver.DemoUtils;
			import twaver.SequenceItemRenderer;
			
			[Bindable] public var node:mapNode;
			[Bindable] public var systemcode:String;
			
			public var equipcode:String;
			public var pageIndex:int=0;
			public var pageSize:int=50;
			public var titles:Array = new Array("端口序号","端口名称","机框序号","机槽序号","机盘序号","端口类型","端口状态","端口速率","业务名称","备注");
			
			protected function closeHandler():void
			{
				PopUpManager.removePopUp(this);
			}
			
			private  function titlewindow1_creationCompleteHandler(event:FlexEvent):void
			{
				getEquipLogicports("0",pageSize.toString());
				serverPagingBar1.exportLinkBtn.visible=true;
				serverPagingBar1.addEventListener("exportExcel",ExportExcel);
				serverPagingBar1.pagingFunction = PagingFunction;
				serverPagingBar1.dataGrid =dg;
				
				//定制右键菜单
				var contextMenu:ContextMenu=new ContextMenu();
				contextMenu.hideBuiltInItems();
				dg.contextMenu=contextMenu;
				dg.contextMenu.addEventListener(ContextMenuEvent.MENU_SELECT,function(e:ContextMenuEvent):void{
					
				})
				
			}
			
			private function getEquipLogicports(start:String,end:String):void{
				var elf:EquipLogicportDetails = new EquipLogicportDetails();
				elf.equipcode = equipcode;
				elf.start = start;
				elf.end = end;
				var remoteObject:RemoteObject = new RemoteObject("wireConfiguration");
				remoteObject.endpoint = ModelLocator.END_POINT;
				remoteObject.showBusyCursor=true;
				remoteObject.addEventListener(ResultEvent.RESULT,getEquipLogicportDetailsHandler);
				remoteObject.getEquipLogicportDetails(elf);
			}
			
			
			private function getEquipLogicportDetailsHandler(event:ResultEvent):void{
				var result:ResultModel = event.result as ResultModel;
				this.onResult(result);
			}
			
			public function onResult(result:ResultModel):void 
			{	
				serverPagingBar1.orgData=result.orderList;
				serverPagingBar1.totalRecord=result.totalCount;
				serverPagingBar1.dataBind(true);	
			}
			
			public function PagingFunction(pageIndex:int,pageSize:int):void
			{
				getEquipLogicports((pageIndex*pageSize).toString(),(pageIndex*pageSize+pageSize).toString());
			}
			
			public function dataHandler(event:ResultEvent):void{
				var result:ResultModel = event.result as ResultModel;
				this.onResult(result);
				
			}
			
			public function returnALL(event:Event = null):void
			{
				getEquipLogicports("0",serverPagingBar1.totalRecord.toString());
			}
			
			public function ExportExcel(event:Event = null):void{
				var model:EquipLogicportDetails = new EquipLogicportDetails();
				model.equipcode = equipcode;
				var ro:RemoteObject = new RemoteObject("wireConfiguration"); 
				ro.endpoint = ModelLocator.END_POINT;
				ro.showBusyCursor = true;
				ro.addEventListener(ResultEvent.RESULT,ExportExcelHandler);
				ro.exportEquiplogictDetails("设备端口信息",titles,model);  
			}
			
			public function ExportExcelHandler(event:ResultEvent):void{
				var path:String = event.result.toString();
				var request:URLRequest = new URLRequest(encodeURI(StringUtil.trim(path))); 
				navigateToURL(request,"_blank");
				
			}
			
		]]>
	</mx:Script>
	<mx:VBox width="100%" height="100%">
		<mx:HBox width="100%" height="100%">
			<mx:DataGrid id="dg" width="100%" height="100%" wordWrap="true" horizontalScrollPolicy="on" sortableColumns="false"  variableRowHeight="true">
				<mx:columns>
					<mx:DataGridColumn headerText="端口序号" dataField="portserial" width="70" />
					<mx:DataGridColumn headerText="端口名称" dataField="name_std" width="200" />
					<mx:DataGridColumn headerText="机框序号" dataField="frameserial" width="70"/>
					<mx:DataGridColumn headerText="机槽序号" dataField="slotserial" width="120" />
					<mx:DataGridColumn headerText="机盘序号" dataField="packserial" width="70"/>
					<mx:DataGridColumn headerText="端口类型" dataField="y_porttype" width="120"/>
					<mx:DataGridColumn headerText="端口状态" dataField="status" width="70"/>
					<mx:DataGridColumn headerText="端口速率" dataField="x_capability" width="100" />
					<mx:DataGridColumn headerText="业务名称" dataField="circuit" width="200" />
					<mx:DataGridColumn headerText="备注" dataField="remark" width="100" />
				</mx:columns>
			</mx:DataGrid>
		</mx:HBox>
		<pgtb:pagetoolbar x="1" id="serverPagingBar1" width="100%"/>
	</mx:VBox>
</panel:PanelWindow>
